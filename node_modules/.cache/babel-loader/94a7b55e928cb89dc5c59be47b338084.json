{"ast":null,"code":"import * as React from \"react\";\nimport { useLatestRef } from \"./use-latest-ref\";\n/**\n * React hook that provides a declarative `setTimeout`\n *\n * @param callback the callback to run after specified delay\n * @param delay the delay (in ms)\n */\n\nexport function useTimeout(callback, delay) {\n  var savedCallback = useLatestRef(callback);\n  React.useEffect(() => {\n    if (delay == null) return undefined;\n    var timeoutId = null;\n    timeoutId = window.setTimeout(() => {\n      savedCallback.current == null ? void 0 : savedCallback.current();\n    }, delay);\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId);\n      }\n    };\n  }, [delay, savedCallback]);\n}","map":{"version":3,"sources":["../../src/use-timeout.ts"],"names":["savedCallback","useLatestRef","React","delay","timeoutId","window"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,YAAA,QAAA,kBAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAAA,UAAA,CAAA,QAAA,EAAA,KAAA,EAA8D;EACnE,IAAMA,aAAa,GAAGC,YAAY,CAAlC,QAAkC,CAAlC;EAEAC,KAAK,CAALA,SAAAA,CAAgB,MAAM;IACpB,IAAIC,KAAK,IAAT,IAAA,EAAmB,OAAA,SAAA;IAEnB,IAAIC,SAAwB,GAA5B,IAAA;IAEAA,SAAS,GAAG,MAAM,CAAN,UAAA,CAAkB,MAAM;MAClCJ,aAAa,CAAbA,OAAAA,IAAAA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAa,CAAbA,OAAAA,EAAAA;IADU,CAAA,EAAZI,KAAY,CAAZA;IAIA,OAAO,MAAM;MACX,IAAA,SAAA,EAAe;QACbC,MAAM,CAANA,YAAAA,CAAAA,SAAAA;MACD;IAHH,CAAA;EATFH,CAAAA,EAcG,CAAA,KAAA,EAdHA,aAcG,CAdHA;AAeD","sourcesContent":["import * as React from \"react\"\nimport { useLatestRef } from \"./use-latest-ref\"\n\n/**\n * React hook that provides a declarative `setTimeout`\n *\n * @param callback the callback to run after specified delay\n * @param delay the delay (in ms)\n */\nexport function useTimeout(callback: Function, delay: number | null) {\n  const savedCallback = useLatestRef(callback)\n\n  React.useEffect(() => {\n    if (delay == null) return undefined\n\n    let timeoutId: number | null = null\n\n    timeoutId = window.setTimeout(() => {\n      savedCallback.current?.()\n    }, delay)\n\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId)\n      }\n    }\n  }, [delay, savedCallback])\n}\n"]},"metadata":{},"sourceType":"module"}