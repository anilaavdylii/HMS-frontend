{"ast":null,"code":"import { focusManager } from './focusManager';\nimport { onlineManager } from './onlineManager';\nimport { sleep } from './utils';\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * Math.pow(2, failureCount), 30000);\n}\n\nexport function isCancelable(value) {\n  return typeof (value == null ? void 0 : value.cancel) === 'function';\n}\nexport var CancelledError = function CancelledError(options) {\n  this.revert = options == null ? void 0 : options.revert;\n  this.silent = options == null ? void 0 : options.silent;\n};\nexport function isCancelledError(value) {\n  return value instanceof CancelledError;\n} // CLASS\n\nexport var Retryer = function Retryer(config) {\n  var _this = this;\n\n  var cancelRetry = false;\n  var cancelFn;\n  var continueFn;\n  var promiseResolve;\n  var promiseReject;\n  this.abort = config.abort;\n\n  this.cancel = function (cancelOptions) {\n    return cancelFn == null ? void 0 : cancelFn(cancelOptions);\n  };\n\n  this.cancelRetry = function () {\n    cancelRetry = true;\n  };\n\n  this.continueRetry = function () {\n    cancelRetry = false;\n  };\n\n  this.continue = function () {\n    return continueFn == null ? void 0 : continueFn();\n  };\n\n  this.failureCount = 0;\n  this.isPaused = false;\n  this.isResolved = false;\n  this.isTransportCancelable = false;\n  this.promise = new Promise(function (outerResolve, outerReject) {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  var resolve = function resolve(value) {\n    if (!_this.isResolved) {\n      _this.isResolved = true;\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseResolve(value);\n    }\n  };\n\n  var reject = function reject(value) {\n    if (!_this.isResolved) {\n      _this.isResolved = true;\n      config.onError == null ? void 0 : config.onError(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseReject(value);\n    }\n  };\n\n  var pause = function pause() {\n    return new Promise(function (continueResolve) {\n      continueFn = continueResolve;\n      _this.isPaused = true;\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(function () {\n      continueFn = undefined;\n      _this.isPaused = false;\n      config.onContinue == null ? void 0 : config.onContinue();\n    });\n  }; // Create loop function\n\n\n  var run = function run() {\n    // Do nothing if already resolved\n    if (_this.isResolved) {\n      return;\n    }\n\n    var promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    } // Create callback to cancel this fetch\n\n\n    cancelFn = function cancelFn(cancelOptions) {\n      if (!_this.isResolved) {\n        reject(new CancelledError(cancelOptions));\n        _this.abort == null ? void 0 : _this.abort(); // Cancel transport if supported\n\n        if (isCancelable(promiseOrValue)) {\n          try {\n            promiseOrValue.cancel();\n          } catch (_unused) {}\n        }\n      }\n    }; // Check if the transport layer support cancellation\n\n\n    _this.isTransportCancelable = isCancelable(promiseOrValue);\n    Promise.resolve(promiseOrValue).then(resolve).catch(function (error) {\n      var _config$retry, _config$retryDelay; // Stop if the fetch is already resolved\n\n\n      if (_this.isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      var retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      var retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      var delay = typeof retryDelay === 'function' ? retryDelay(_this.failureCount, error) : retryDelay;\n      var shouldRetry = retry === true || typeof retry === 'number' && _this.failureCount < retry || typeof retry === 'function' && retry(_this.failureCount, error);\n\n      if (cancelRetry || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      _this.failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(_this.failureCount, error); // Delay\n\n      sleep(delay) // Pause if the document is not visible or when the device is offline\n      .then(function () {\n        if (!focusManager.isFocused() || !onlineManager.isOnline()) {\n          return pause();\n        }\n      }).then(function () {\n        if (cancelRetry) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  run();\n};","map":{"version":3,"names":["focusManager","onlineManager","sleep","defaultRetryDelay","failureCount","Math","min","pow","isCancelable","value","cancel","CancelledError","options","revert","silent","isCancelledError","Retryer","config","_this","cancelRetry","cancelFn","continueFn","promiseResolve","promiseReject","abort","cancelOptions","continueRetry","continue","isPaused","isResolved","isTransportCancelable","promise","Promise","outerResolve","outerReject","resolve","onSuccess","reject","onError","pause","continueResolve","onPause","then","undefined","onContinue","run","promiseOrValue","fn","error","_unused","catch","_config$retry","_config$retryDelay","retry","retryDelay","delay","shouldRetry","onFail","isFocused","isOnline"],"sources":["/Users/erakastrati/Desktop/HMS-frontend/node_modules/react-query/es/core/retryer.js"],"sourcesContent":["import { focusManager } from './focusManager';\r\nimport { onlineManager } from './onlineManager';\r\nimport { sleep } from './utils';\r\n\r\nfunction defaultRetryDelay(failureCount) {\r\n  return Math.min(1000 * Math.pow(2, failureCount), 30000);\r\n}\r\n\r\nexport function isCancelable(value) {\r\n  return typeof (value == null ? void 0 : value.cancel) === 'function';\r\n}\r\nexport var CancelledError = function CancelledError(options) {\r\n  this.revert = options == null ? void 0 : options.revert;\r\n  this.silent = options == null ? void 0 : options.silent;\r\n};\r\nexport function isCancelledError(value) {\r\n  return value instanceof CancelledError;\r\n} // CLASS\r\n\r\nexport var Retryer = function Retryer(config) {\r\n  var _this = this;\r\n\r\n  var cancelRetry = false;\r\n  var cancelFn;\r\n  var continueFn;\r\n  var promiseResolve;\r\n  var promiseReject;\r\n  this.abort = config.abort;\r\n\r\n  this.cancel = function (cancelOptions) {\r\n    return cancelFn == null ? void 0 : cancelFn(cancelOptions);\r\n  };\r\n\r\n  this.cancelRetry = function () {\r\n    cancelRetry = true;\r\n  };\r\n\r\n  this.continueRetry = function () {\r\n    cancelRetry = false;\r\n  };\r\n\r\n  this.continue = function () {\r\n    return continueFn == null ? void 0 : continueFn();\r\n  };\r\n\r\n  this.failureCount = 0;\r\n  this.isPaused = false;\r\n  this.isResolved = false;\r\n  this.isTransportCancelable = false;\r\n  this.promise = new Promise(function (outerResolve, outerReject) {\r\n    promiseResolve = outerResolve;\r\n    promiseReject = outerReject;\r\n  });\r\n\r\n  var resolve = function resolve(value) {\r\n    if (!_this.isResolved) {\r\n      _this.isResolved = true;\r\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\r\n      continueFn == null ? void 0 : continueFn();\r\n      promiseResolve(value);\r\n    }\r\n  };\r\n\r\n  var reject = function reject(value) {\r\n    if (!_this.isResolved) {\r\n      _this.isResolved = true;\r\n      config.onError == null ? void 0 : config.onError(value);\r\n      continueFn == null ? void 0 : continueFn();\r\n      promiseReject(value);\r\n    }\r\n  };\r\n\r\n  var pause = function pause() {\r\n    return new Promise(function (continueResolve) {\r\n      continueFn = continueResolve;\r\n      _this.isPaused = true;\r\n      config.onPause == null ? void 0 : config.onPause();\r\n    }).then(function () {\r\n      continueFn = undefined;\r\n      _this.isPaused = false;\r\n      config.onContinue == null ? void 0 : config.onContinue();\r\n    });\r\n  }; // Create loop function\r\n\r\n\r\n  var run = function run() {\r\n    // Do nothing if already resolved\r\n    if (_this.isResolved) {\r\n      return;\r\n    }\r\n\r\n    var promiseOrValue; // Execute query\r\n\r\n    try {\r\n      promiseOrValue = config.fn();\r\n    } catch (error) {\r\n      promiseOrValue = Promise.reject(error);\r\n    } // Create callback to cancel this fetch\r\n\r\n\r\n    cancelFn = function cancelFn(cancelOptions) {\r\n      if (!_this.isResolved) {\r\n        reject(new CancelledError(cancelOptions));\r\n        _this.abort == null ? void 0 : _this.abort(); // Cancel transport if supported\r\n\r\n        if (isCancelable(promiseOrValue)) {\r\n          try {\r\n            promiseOrValue.cancel();\r\n          } catch (_unused) {}\r\n        }\r\n      }\r\n    }; // Check if the transport layer support cancellation\r\n\r\n\r\n    _this.isTransportCancelable = isCancelable(promiseOrValue);\r\n    Promise.resolve(promiseOrValue).then(resolve).catch(function (error) {\r\n      var _config$retry, _config$retryDelay;\r\n\r\n      // Stop if the fetch is already resolved\r\n      if (_this.isResolved) {\r\n        return;\r\n      } // Do we need to retry the request?\r\n\r\n\r\n      var retry = (_config$retry = config.retry) != null ? _config$retry : 3;\r\n      var retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\r\n      var delay = typeof retryDelay === 'function' ? retryDelay(_this.failureCount, error) : retryDelay;\r\n      var shouldRetry = retry === true || typeof retry === 'number' && _this.failureCount < retry || typeof retry === 'function' && retry(_this.failureCount, error);\r\n\r\n      if (cancelRetry || !shouldRetry) {\r\n        // We are done if the query does not need to be retried\r\n        reject(error);\r\n        return;\r\n      }\r\n\r\n      _this.failureCount++; // Notify on fail\r\n\r\n      config.onFail == null ? void 0 : config.onFail(_this.failureCount, error); // Delay\r\n\r\n      sleep(delay) // Pause if the document is not visible or when the device is offline\r\n      .then(function () {\r\n        if (!focusManager.isFocused() || !onlineManager.isOnline()) {\r\n          return pause();\r\n        }\r\n      }).then(function () {\r\n        if (cancelRetry) {\r\n          reject(error);\r\n        } else {\r\n          run();\r\n        }\r\n      });\r\n    });\r\n  }; // Start loop\r\n\r\n\r\n  run();\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}