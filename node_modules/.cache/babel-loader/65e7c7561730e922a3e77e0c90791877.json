{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nexport function useDropdownMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? true : _options$usePopper;\n  var show = context.show == null ? options.show : context.show;\n  var alignEnd = context.alignEnd == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    if (!context.toggle) return;\n    context.toggle(false, e);\n  };\n\n  var drop = context.drop,\n      setMenu = context.setMenu,\n      menuElement = context.menuElement,\n      toggleElement = context.toggleElement;\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var popper = usePopper(toggleElement, menuElement, {\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    eventsEnabled: !!show,\n    modifiers: _extends({\n      flip: {\n        enabled: !!flip\n      },\n      arrow: _extends({}, popperConfig.modifiers && popperConfig.modifiers.arrow, {\n        enabled: !!arrowElement,\n        element: arrowElement\n      })\n    }, popperConfig.modifiers)\n  });\n  var menu = null;\n  var menuProps = {\n    ref: setMenu,\n    'aria-labelledby': toggleElement && toggleElement.id\n  };\n  var childArgs = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    close: handleClose\n  };\n\n  if (!shouldUsePopper) {\n    menu = _extends({}, childArgs, {\n      props: menuProps\n    });\n  } else {\n    menu = _extends({}, popper, {}, childArgs, {\n      props: _extends({}, menuProps, {\n        style: popper.styles\n      }),\n      arrowProps: {\n        ref: attachArrowRef,\n        style: popper.arrowStyles\n      }\n    });\n  }\n\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !(menu && show)\n  });\n  return menu;\n}\nvar propTypes = {\n  /**\r\n   * A render prop that returns a Menu element. The `props`\r\n   * argument should spread through to **a component that can accept a ref**.\r\n   *\r\n   * @type {Function ({\r\n   *   show: boolean,\r\n   *   alignEnd: boolean,\r\n   *   close: (?SyntheticEvent) => void,\r\n   *   placement: Placement,\r\n   *   outOfBoundaries: ?boolean,\r\n   *   scheduleUpdate: () => void,\r\n   *   props: {\r\n   *     ref: (?HTMLElement) => void,\r\n   *     style: { [string]: string | number },\r\n   *     aria-labelledby: ?string\r\n   *   },\r\n   *   arrowProps: {\r\n   *     ref: (?HTMLElement) => void,\r\n   *     style: { [string]: string | number },\r\n   *   },\r\n   * }) => React.Element}\r\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\r\n   * Controls the visible state of the menu, generally this is\r\n   * provided by the parent `Dropdown` component,\r\n   * but may also be specified as a prop directly.\r\n   */\n  show: PropTypes.bool,\n\n  /**\r\n   * Aligns the dropdown menu to the 'end' of it's placement position.\r\n   * Generally this is provided by the parent `Dropdown` component,\r\n   * but may also be specified as a prop directly.\r\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\r\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\r\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\r\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\r\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\r\n   * A set of popper options and props passed directly to react-popper's Popper component.\r\n   */\n  popperConfig: PropTypes.object,\n\n  /**\r\n   * Override the default event used by RootCloseWrapper.\r\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\nfunction DropdownMenu(_ref) {\n  var children = _ref.children,\n      options = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  var args = useDropdownMenu(options);\n  return args.hasShown ? children(args) : null;\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","PropTypes","useContext","useRef","useCallbackRef","DropdownContext","usePopper","useRootClose","useDropdownMenu","options","context","_useCallbackRef","arrowElement","attachArrowRef","hasShownRef","_options","flip","rootCloseEvent","_options$popperConfig","popperConfig","_options$usePopper","shouldUsePopper","show","alignEnd","current","handleClose","e","toggle","drop","setMenu","menuElement","toggleElement","placement","popper","enabled","eventsEnabled","modifiers","arrow","element","menu","menuProps","ref","id","childArgs","hasShown","close","props","style","styles","arrowProps","arrowStyles","clickTrigger","disabled","propTypes","children","func","isRequired","bool","oneOf","object","string","defaultProps","DropdownMenu","_ref","args","displayName"],"sources":["/Users/erakastrati/Desktop/HMS-frontend/node_modules/react-overlays/esm/DropdownMenu.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport PropTypes from 'prop-types';\r\nimport { useContext, useRef } from 'react';\r\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\r\nimport DropdownContext from './DropdownContext';\r\nimport usePopper from './usePopper';\r\nimport useRootClose from './useRootClose';\r\nexport function useDropdownMenu(options) {\r\n  if (options === void 0) {\r\n    options = {};\r\n  }\r\n\r\n  var context = useContext(DropdownContext);\r\n\r\n  var _useCallbackRef = useCallbackRef(),\r\n      arrowElement = _useCallbackRef[0],\r\n      attachArrowRef = _useCallbackRef[1];\r\n\r\n  var hasShownRef = useRef(false);\r\n  var _options = options,\r\n      flip = _options.flip,\r\n      rootCloseEvent = _options.rootCloseEvent,\r\n      _options$popperConfig = _options.popperConfig,\r\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\r\n      _options$usePopper = _options.usePopper,\r\n      shouldUsePopper = _options$usePopper === void 0 ? true : _options$usePopper;\r\n  var show = context.show == null ? options.show : context.show;\r\n  var alignEnd = context.alignEnd == null ? options.alignEnd : context.alignEnd;\r\n\r\n  if (show && !hasShownRef.current) {\r\n    hasShownRef.current = true;\r\n  }\r\n\r\n  var handleClose = function handleClose(e) {\r\n    if (!context.toggle) return;\r\n    context.toggle(false, e);\r\n  };\r\n\r\n  var drop = context.drop,\r\n      setMenu = context.setMenu,\r\n      menuElement = context.menuElement,\r\n      toggleElement = context.toggleElement;\r\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\r\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\r\n  var popper = usePopper(toggleElement, menuElement, {\r\n    placement: placement,\r\n    enabled: !!(shouldUsePopper && show),\r\n    eventsEnabled: !!show,\r\n    modifiers: _extends({\r\n      flip: {\r\n        enabled: !!flip\r\n      },\r\n      arrow: _extends({}, popperConfig.modifiers && popperConfig.modifiers.arrow, {\r\n        enabled: !!arrowElement,\r\n        element: arrowElement\r\n      })\r\n    }, popperConfig.modifiers)\r\n  });\r\n  var menu = null;\r\n  var menuProps = {\r\n    ref: setMenu,\r\n    'aria-labelledby': toggleElement && toggleElement.id\r\n  };\r\n  var childArgs = {\r\n    show: show,\r\n    alignEnd: alignEnd,\r\n    hasShown: hasShownRef.current,\r\n    close: handleClose\r\n  };\r\n\r\n  if (!shouldUsePopper) {\r\n    menu = _extends({}, childArgs, {\r\n      props: menuProps\r\n    });\r\n  } else {\r\n    menu = _extends({}, popper, {}, childArgs, {\r\n      props: _extends({}, menuProps, {\r\n        style: popper.styles\r\n      }),\r\n      arrowProps: {\r\n        ref: attachArrowRef,\r\n        style: popper.arrowStyles\r\n      }\r\n    });\r\n  }\r\n\r\n  useRootClose(menuElement, handleClose, {\r\n    clickTrigger: rootCloseEvent,\r\n    disabled: !(menu && show)\r\n  });\r\n  return menu;\r\n}\r\nvar propTypes = {\r\n  /**\r\n   * A render prop that returns a Menu element. The `props`\r\n   * argument should spread through to **a component that can accept a ref**.\r\n   *\r\n   * @type {Function ({\r\n   *   show: boolean,\r\n   *   alignEnd: boolean,\r\n   *   close: (?SyntheticEvent) => void,\r\n   *   placement: Placement,\r\n   *   outOfBoundaries: ?boolean,\r\n   *   scheduleUpdate: () => void,\r\n   *   props: {\r\n   *     ref: (?HTMLElement) => void,\r\n   *     style: { [string]: string | number },\r\n   *     aria-labelledby: ?string\r\n   *   },\r\n   *   arrowProps: {\r\n   *     ref: (?HTMLElement) => void,\r\n   *     style: { [string]: string | number },\r\n   *   },\r\n   * }) => React.Element}\r\n   */\r\n  children: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * Controls the visible state of the menu, generally this is\r\n   * provided by the parent `Dropdown` component,\r\n   * but may also be specified as a prop directly.\r\n   */\r\n  show: PropTypes.bool,\r\n\r\n  /**\r\n   * Aligns the dropdown menu to the 'end' of it's placement position.\r\n   * Generally this is provided by the parent `Dropdown` component,\r\n   * but may also be specified as a prop directly.\r\n   */\r\n  alignEnd: PropTypes.bool,\r\n\r\n  /**\r\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\r\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\r\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\r\n   */\r\n  flip: PropTypes.bool,\r\n  usePopper: PropTypes.oneOf([true, false]),\r\n\r\n  /**\r\n   * A set of popper options and props passed directly to react-popper's Popper component.\r\n   */\r\n  popperConfig: PropTypes.object,\r\n\r\n  /**\r\n   * Override the default event used by RootCloseWrapper.\r\n   */\r\n  rootCloseEvent: PropTypes.string\r\n};\r\nvar defaultProps = {\r\n  usePopper: true\r\n};\r\n\r\nfunction DropdownMenu(_ref) {\r\n  var children = _ref.children,\r\n      options = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\r\n\r\n  var args = useDropdownMenu(options);\r\n  return args.hasShown ? children(args) : null;\r\n}\r\n\r\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\r\nDropdownMenu.propTypes = propTypes;\r\nDropdownMenu.defaultProps = defaultProps;\r\n/** @component */\r\n\r\nexport default DropdownMenu;"],"mappings":"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"},"metadata":{},"sourceType":"module"}