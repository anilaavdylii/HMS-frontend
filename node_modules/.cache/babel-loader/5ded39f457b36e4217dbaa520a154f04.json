{"ast":null,"code":"import { createParser, system } from \"@styled-system/core\";\nimport { positiveOrNegative } from \"../utils\";\nvar config = {\n  position: true,\n  pos: {\n    property: \"position\"\n  },\n  zIndex: {\n    property: \"zIndex\",\n    scale: \"zIndices\"\n  },\n  inset: {\n    properties: [\"left\", \"top\", \"bottom\", \"right\"],\n    scale: \"space\",\n    transform: positiveOrNegative\n  },\n  insetX: {\n    properties: [\"left\", \"right\"],\n    scale: \"space\",\n    transform: positiveOrNegative\n  },\n  insetY: {\n    properties: [\"top\", \"bottom\"],\n    scale: \"space\",\n    transform: positiveOrNegative\n  },\n  top: {\n    property: \"top\",\n    scale: \"space\",\n    transform: positiveOrNegative\n  },\n  right: {\n    property: \"right\",\n    scale: \"space\",\n    transform: positiveOrNegative\n  },\n  bottom: {\n    property: \"bottom\",\n    scale: \"space\",\n    transform: positiveOrNegative\n  },\n  left: {\n    property: \"left\",\n    scale: \"space\",\n    transform: positiveOrNegative\n  }\n};\n/**\n * Types for position CSS properties\n */\n\nexport var position = system(config);\nexport var positionParser = createParser(config);","map":{"version":3,"sources":["../../../src/config/position.ts"],"names":["config","position","pos","property","zIndex","scale","inset","properties","transform","positiveOrNegative","insetX","insetY","top","right","bottom","left","system","positionParser","createParser"],"mappings":"AAAA,SAAA,YAAA,EAAA,MAAA,QAAA,qBAAA;AAEA,SAAA,kBAAA,QAAA,UAAA;AAEA,IAAMA,MAAc,GAAG;EACrBC,QAAQ,EADa,IAAA;EAErBC,GAAG,EAAE;IACHC,QAAQ,EAAE;EADP,CAFgB;EAKrBC,MAAM,EAAE;IACND,QAAQ,EADF,QAAA;IAENE,KAAK,EAAE;EAFD,CALa;EASrBC,KAAK,EAAE;IACLC,UAAU,EAAE,CAAA,MAAA,EAAA,KAAA,EAAA,QAAA,EADP,OACO,CADP;IAELF,KAAK,EAFA,OAAA;IAGLG,SAAS,EAAEC;EAHN,CATc;EAcrBC,MAAM,EAAE;IACNH,UAAU,EAAE,CAAA,MAAA,EADN,OACM,CADN;IAENF,KAAK,EAFC,OAAA;IAGNG,SAAS,EAAEC;EAHL,CAda;EAmBrBE,MAAM,EAAE;IACNJ,UAAU,EAAE,CAAA,KAAA,EADN,QACM,CADN;IAENF,KAAK,EAFC,OAAA;IAGNG,SAAS,EAAEC;EAHL,CAnBa;EAwBrBG,GAAG,EAAE;IACHT,QAAQ,EADL,KAAA;IAEHE,KAAK,EAFF,OAAA;IAGHG,SAAS,EAAEC;EAHR,CAxBgB;EA6BrBI,KAAK,EAAE;IACLV,QAAQ,EADH,OAAA;IAELE,KAAK,EAFA,OAAA;IAGLG,SAAS,EAAEC;EAHN,CA7Bc;EAkCrBK,MAAM,EAAE;IACNX,QAAQ,EADF,QAAA;IAENE,KAAK,EAFC,OAAA;IAGNG,SAAS,EAAEC;EAHL,CAlCa;EAuCrBM,IAAI,EAAE;IACJZ,QAAQ,EADJ,MAAA;IAEJE,KAAK,EAFD,OAAA;IAGJG,SAAS,EAAEC;EAHP;AAvCe,CAAvB;AA8CA;AACA;AACA;;AA4CA,OAAO,IAAMR,QAAQ,GAAGe,MAAM,CAAvB,MAAuB,CAAvB;AACP,OAAO,IAAMC,cAAc,GAAGC,YAAY,CAAnC,MAAmC,CAAnC","sourcesContent":["import { Config, createParser, system } from \"@styled-system/core\"\nimport * as CSS from \"csstype\"\nimport { Length, positiveOrNegative, ResponsiveValue } from \"../utils\"\n\nconst config: Config = {\n  position: true,\n  pos: {\n    property: \"position\",\n  },\n  zIndex: {\n    property: \"zIndex\",\n    scale: \"zIndices\",\n  },\n  inset: {\n    properties: [\"left\", \"top\", \"bottom\", \"right\"],\n    scale: \"space\",\n    transform: positiveOrNegative,\n  },\n  insetX: {\n    properties: [\"left\", \"right\"],\n    scale: \"space\",\n    transform: positiveOrNegative,\n  },\n  insetY: {\n    properties: [\"top\", \"bottom\"],\n    scale: \"space\",\n    transform: positiveOrNegative,\n  },\n  top: {\n    property: \"top\",\n    scale: \"space\",\n    transform: positiveOrNegative,\n  },\n  right: {\n    property: \"right\",\n    scale: \"space\",\n    transform: positiveOrNegative,\n  },\n  bottom: {\n    property: \"bottom\",\n    scale: \"space\",\n    transform: positiveOrNegative,\n  },\n  left: {\n    property: \"left\",\n    scale: \"space\",\n    transform: positiveOrNegative,\n  },\n}\n\n/**\n * Types for position CSS properties\n */\nexport interface PositionProps {\n  /**\n   * The CSS `z-index` property\n   */\n  zIndex?: ResponsiveValue<string | CSS.Property.ZIndex>\n  /**\n   * The CSS `top` property\n   */\n  top?: ResponsiveValue<CSS.Property.Top<Length>>\n  /**\n   * The CSS `right` property\n   */\n  right?: ResponsiveValue<CSS.Property.Right<Length>>\n  /**\n   * The CSS `bottom` property\n   */\n  bottom?: ResponsiveValue<CSS.Property.Bottom<Length>>\n  /**\n   * The CSS `left` property\n   */\n  left?: ResponsiveValue<CSS.Property.Left<Length>>\n  /**\n   * The CSS `left`, `right`, `top`, `bottom` property\n   */\n  inset?: ResponsiveValue<CSS.Property.Left<Length>>\n  /**\n   * The CSS `left`, and `right` property\n   */\n  insetX?: ResponsiveValue<CSS.Property.Left<Length>>\n  /**\n   * The CSS `top`, and `bottom` property\n   */\n  insetY?: ResponsiveValue<CSS.Property.Left<Length>>\n  /**\n   * The CSS `position` property\n   */\n  pos?: ResponsiveValue<CSS.Property.Position>\n  /**\n   * The CSS `position` property\n   */\n  position?: ResponsiveValue<CSS.Property.Position>\n}\n\nexport const position = system(config)\nexport const positionParser = createParser(config)\n"]},"metadata":{},"sourceType":"module"}