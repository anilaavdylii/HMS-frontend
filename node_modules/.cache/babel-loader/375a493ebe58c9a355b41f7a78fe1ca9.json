{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n/* eslint-disable react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ModalManager from './ModalManager';\nimport ownerDocument from './utils/ownerDocument';\nimport useWaitForDOMRef from './utils/useWaitForDOMRef';\nvar modalManager = new ModalManager();\n\nfunction omitProps(props, propTypes) {\n  var keys = Object.keys(props);\n  var newProps = {};\n  keys.forEach(function (prop) {\n    if (!Object.prototype.hasOwnProperty.call(propTypes, prop)) {\n      newProps[prop] = props[prop];\n    }\n  });\n  return newProps;\n}\n/**\r\n * Love them or hate them, `<Modal />` provides a solid foundation for creating dialogs, lightboxes, or whatever else.\r\n * The Modal component renders its `children` node in front of a backdrop component.\r\n *\r\n * The Modal offers a few helpful features over using just a `<Portal/>` component and some styles:\r\n *\r\n * - Manages dialog stacking when one-at-a-time just isn't enough.\r\n * - Creates a backdrop, for disabling interaction below the modal.\r\n * - It properly manages focus; moving to the modal content, and keeping it there until the modal is closed.\r\n * - It disables scrolling of the page content while open.\r\n * - Adds the appropriate ARIA roles are automatically.\r\n * - Easily pluggable animations via a `<Transition/>` component.\r\n *\r\n * Note that, in the same way the backdrop element prevents users from clicking or interacting\r\n * with the page content underneath the Modal, Screen readers also need to be signaled to not to\r\n * interact with page content while the Modal is open. To do this, we use a common technique of applying\r\n * the `aria-hidden='true'` attribute to the non-Modal elements in the Modal `container`. This means that for\r\n * a Modal to be truly modal, it should have a `container` that is _outside_ your app's\r\n * React hierarchy (such as the default: document.body).\r\n */\n\n\nvar Modal = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Modal, _React$Component);\n\n  function Modal() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\n    _this.state = {\n      exited: !_this.props.show\n    };\n\n    _this.onShow = function () {\n      var _this$props = _this.props,\n          container = _this$props.container,\n          containerClassName = _this$props.containerClassName,\n          manager = _this$props.manager,\n          onShow = _this$props.onShow;\n      manager.add(_assertThisInitialized(_this), container, containerClassName);\n      _this.removeKeydownListener = listen(document, 'keydown', _this.handleDocumentKeyDown);\n      _this.removeFocusListener = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n      // and so steals focus from it\n      function () {\n        return setTimeout(_this.enforceFocus);\n      }, true);\n\n      if (onShow) {\n        onShow();\n      } // autofocus after onShow, to not trigger a focus event for previous\n      // modals before this one is shown.\n\n\n      _this.autoFocus();\n    };\n\n    _this.onHide = function () {\n      _this.props.manager.remove(_assertThisInitialized(_this));\n\n      _this.removeKeydownListener();\n\n      _this.removeFocusListener();\n\n      if (_this.props.restoreFocus) {\n        _this.restoreLastFocus();\n      }\n    };\n\n    _this.setDialogRef = function (ref) {\n      _this.dialog = ref;\n    };\n\n    _this.setBackdropRef = function (ref) {\n      _this.backdrop = ref && ReactDOM.findDOMNode(ref);\n    };\n\n    _this.handleHidden = function () {\n      _this.setState({\n        exited: true\n      });\n\n      _this.onHide();\n\n      if (_this.props.onExited) {\n        var _this$props2;\n\n        (_this$props2 = _this.props).onExited.apply(_this$props2, arguments);\n      }\n    };\n\n    _this.handleBackdropClick = function (e) {\n      if (e.target !== e.currentTarget) {\n        return;\n      }\n\n      if (_this.props.onBackdropClick) {\n        _this.props.onBackdropClick(e);\n      }\n\n      if (_this.props.backdrop === true) {\n        _this.props.onHide();\n      }\n    };\n\n    _this.handleDocumentKeyDown = function (e) {\n      if (_this.props.keyboard && e.keyCode === 27 && _this.isTopModal()) {\n        if (_this.props.onEscapeKeyDown) {\n          _this.props.onEscapeKeyDown(e);\n        }\n\n        _this.props.onHide();\n      }\n    };\n\n    _this.enforceFocus = function () {\n      if (!_this.props.enforceFocus || !_this._isMounted || !_this.isTopModal()) {\n        return;\n      }\n\n      var currentActiveElement = activeElement(ownerDocument(_assertThisInitialized(_this)));\n\n      if (_this.dialog && !contains(_this.dialog, currentActiveElement)) {\n        _this.dialog.focus();\n      }\n    };\n\n    _this.renderBackdrop = function () {\n      var _this$props3 = _this.props,\n          renderBackdrop = _this$props3.renderBackdrop,\n          Transition = _this$props3.backdropTransition;\n      var backdrop = renderBackdrop({\n        ref: _this.setBackdropRef,\n        onClick: _this.handleBackdropClick\n      });\n\n      if (Transition) {\n        backdrop = React.createElement(Transition, {\n          appear: true,\n          \"in\": _this.props.show\n        }, backdrop);\n      }\n\n      return backdrop;\n    };\n\n    return _this;\n  }\n\n  Modal.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {\n    if (nextProps.show) {\n      return {\n        exited: false\n      };\n    }\n\n    if (!nextProps.transition) {\n      // Otherwise let handleHidden take care of marking exited.\n      return {\n        exited: true\n      };\n    }\n\n    return null;\n  };\n\n  var _proto = Modal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._isMounted = true;\n\n    if (this.props.show) {\n      this.onShow();\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var transition = this.props.transition;\n\n    if (prevProps.show && !this.props.show && !transition) {\n      // Otherwise handleHidden will call this.\n      this.onHide();\n    } else if (!prevProps.show && this.props.show) {\n      this.onShow();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var _this$props4 = this.props,\n        show = _this$props4.show,\n        transition = _this$props4.transition;\n    this._isMounted = false;\n\n    if (show || transition && !this.state.exited) {\n      this.onHide();\n    }\n  };\n\n  _proto.getSnapshotBeforeUpdate = function getSnapshotBeforeUpdate(prevProps) {\n    if (canUseDOM && !prevProps.show && this.props.show) {\n      this.lastFocus = activeElement();\n    }\n\n    return null;\n  };\n\n  _proto.restoreLastFocus = function restoreLastFocus() {\n    // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n    if (this.lastFocus && this.lastFocus.focus) {\n      this.lastFocus.focus(this.props.restoreFocusOptions);\n      this.lastFocus = null;\n    }\n  };\n\n  _proto.autoFocus = function autoFocus() {\n    if (!this.props.autoFocus) return;\n    var currentActiveElement = activeElement(ownerDocument(this));\n\n    if (this.dialog && !contains(this.dialog, currentActiveElement)) {\n      this.lastFocus = currentActiveElement;\n      this.dialog.focus();\n    }\n  };\n\n  _proto.isTopModal = function isTopModal() {\n    return this.props.manager.isTopModal(this);\n  };\n\n  _proto.render = function render() {\n    var _this$props5 = this.props,\n        show = _this$props5.show,\n        container = _this$props5.container,\n        children = _this$props5.children,\n        renderDialog = _this$props5.renderDialog,\n        _this$props5$role = _this$props5.role,\n        role = _this$props5$role === void 0 ? 'dialog' : _this$props5$role,\n        Transition = _this$props5.transition,\n        backdrop = _this$props5.backdrop,\n        className = _this$props5.className,\n        style = _this$props5.style,\n        onExit = _this$props5.onExit,\n        onExiting = _this$props5.onExiting,\n        onEnter = _this$props5.onEnter,\n        onEntering = _this$props5.onEntering,\n        onEntered = _this$props5.onEntered,\n        props = _objectWithoutPropertiesLoose(_this$props5, [\"show\", \"container\", \"children\", \"renderDialog\", \"role\", \"transition\", \"backdrop\", \"className\", \"style\", \"onExit\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"]);\n\n    if (!(show || Transition && !this.state.exited)) {\n      return null;\n    }\n\n    var dialogProps = _extends({\n      role: role,\n      ref: this.setDialogRef,\n      // apparently only works on the dialog role element\n      'aria-modal': role === 'dialog' ? true : undefined\n    }, omitProps(props, Modal.propTypes), {\n      style: style,\n      className: className,\n      tabIndex: '-1'\n    });\n\n    var dialog = renderDialog ? renderDialog(dialogProps) : React.createElement(\"div\", dialogProps, React.cloneElement(children, {\n      role: 'document'\n    }));\n\n    if (Transition) {\n      dialog = React.createElement(Transition, {\n        appear: true,\n        unmountOnExit: true,\n        \"in\": show,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: this.handleHidden,\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: onEntered\n      }, dialog);\n    }\n\n    return ReactDOM.createPortal(React.createElement(React.Fragment, null, backdrop && this.renderBackdrop(), dialog), container);\n  };\n\n  return Modal;\n}(React.Component); // dumb HOC for the sake react-docgen\n\n\nModal.propTypes = {\n  /**\r\n   * Set the visibility of the Modal\r\n   */\n  show: PropTypes.bool,\n\n  /**\r\n   * A DOM element, a `ref` to an element, or function that returns either. The Modal is appended to it's `container` element.\r\n   *\r\n   * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the\r\n   * page content can be placed behind a virtual backdrop as well as a visual one.\r\n   */\n  container: PropTypes.any,\n\n  /**\r\n   * A callback fired when the Modal is opening.\r\n   */\n  onShow: PropTypes.func,\n\n  /**\r\n   * A callback fired when either the backdrop is clicked, or the escape key is pressed.\r\n   *\r\n   * The `onHide` callback only signals intent from the Modal,\r\n   * you must actually set the `show` prop to `false` for the Modal to close.\r\n   */\n  onHide: PropTypes.func,\n\n  /**\r\n   * Include a backdrop component.\r\n   */\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\n\n  /**\r\n   * A function that returns the dialog component. Useful for custom\r\n   * rendering. **Note:** the component should make sure to apply the provided ref.\r\n   *\r\n   * ```js\r\n   *  renderDialog={props => <MyDialog {...props} />}\r\n   * ```\r\n   */\n  renderDialog: PropTypes.func,\n\n  /**\r\n   * A function that returns a backdrop component. Useful for custom\r\n   * backdrop rendering.\r\n   *\r\n   * ```js\r\n   *  renderBackdrop={props => <MyBackdrop {...props} />}\r\n   * ```\r\n   */\n  renderBackdrop: PropTypes.func,\n\n  /**\r\n   * A callback fired when the escape key, if specified in `keyboard`, is pressed.\r\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\r\n   * A callback fired when the backdrop, if specified, is clicked.\r\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\r\n   * A css class or set of classes applied to the modal container when the modal is open,\r\n   * and removed when it is closed.\r\n   */\n  containerClassName: PropTypes.string,\n\n  /**\r\n   * Close the modal when escape key is pressed\r\n   */\n  keyboard: PropTypes.bool,\n\n  /**\r\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\r\n   * to control animations for the dialog component.\r\n   */\n  transition: PropTypes.elementType,\n\n  /**\r\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\r\n   * to control animations for the backdrop components.\r\n   */\n  backdropTransition: PropTypes.elementType,\n\n  /**\r\n   * When `true` The modal will automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes. This also\r\n   * works correctly with any Modal children that have the `autoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `false` as it makes the Modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\r\n   * When `true` The modal will prevent focus from leaving the Modal while open.\r\n   *\r\n   * Generally this should never be set to `false` as it makes the Modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\n  enforceFocus: PropTypes.bool,\n\n  /**\r\n   * When `true` The modal will restore focus to previously focused element once\r\n   * modal is hidden\r\n   */\n  restoreFocus: PropTypes.bool,\n\n  /**\r\n   * Options passed to focus function when `restoreFocus` is set to `true`\r\n   *\r\n   * @link  https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#Parameters\r\n   */\n  restoreFocusOptions: PropTypes.shape({\n    preventScroll: PropTypes.bool\n  }),\n\n  /**\r\n   * Callback fired before the Modal transitions in\r\n   */\n  onEnter: PropTypes.func,\n\n  /**\r\n   * Callback fired as the Modal begins to transition in\r\n   */\n  onEntering: PropTypes.func,\n\n  /**\r\n   * Callback fired after the Modal finishes transitioning in\r\n   */\n  onEntered: PropTypes.func,\n\n  /**\r\n   * Callback fired right before the Modal transitions out\r\n   */\n  onExit: PropTypes.func,\n\n  /**\r\n   * Callback fired as the Modal begins to transition out\r\n   */\n  onExiting: PropTypes.func,\n\n  /**\r\n   * Callback fired after the Modal finishes transitioning out\r\n   */\n  onExited: PropTypes.func,\n\n  /**\r\n   * A ModalManager instance used to track and manage the state of open\r\n   * Modals. Useful when customizing how modals interact within a container\r\n   */\n  manager: PropTypes.object.isRequired\n};\nModal.defaultProps = {\n  show: false,\n  role: 'dialog',\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  onHide: function onHide() {},\n  manager: modalManager,\n  renderBackdrop: function renderBackdrop(props) {\n    return React.createElement(\"div\", props);\n  }\n};\n\nfunction forwardRef(Component) {\n  // eslint-disable-next-line react/display-name\n  var ModalWithContainer = React.forwardRef(function (props, ref) {\n    var resolved = useWaitForDOMRef(props.container);\n    return resolved ? React.createElement(Component, _extends({}, props, {\n      ref: ref,\n      container: resolved\n    })) : null;\n  });\n  ModalWithContainer.Manager = ModalManager;\n  ModalWithContainer._Inner = Component;\n  return ModalWithContainer;\n}\n\nvar ModalWithContainer = forwardRef(Modal);\nModalWithContainer.Manager = ModalManager;\nexport default ModalWithContainer;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_assertThisInitialized","_inheritsLoose","activeElement","contains","canUseDOM","listen","PropTypes","React","ReactDOM","ModalManager","ownerDocument","useWaitForDOMRef","modalManager","omitProps","props","propTypes","keys","Object","newProps","forEach","prop","prototype","hasOwnProperty","call","Modal","_React$Component","_this","_len","arguments","length","_args","Array","_key","apply","concat","state","exited","show","onShow","_this$props","container","containerClassName","manager","add","removeKeydownListener","document","handleDocumentKeyDown","removeFocusListener","setTimeout","enforceFocus","autoFocus","onHide","remove","restoreFocus","restoreLastFocus","setDialogRef","ref","dialog","setBackdropRef","backdrop","findDOMNode","handleHidden","setState","onExited","_this$props2","handleBackdropClick","e","target","currentTarget","onBackdropClick","keyboard","keyCode","isTopModal","onEscapeKeyDown","_isMounted","currentActiveElement","focus","renderBackdrop","_this$props3","Transition","backdropTransition","onClick","createElement","appear","getDerivedStateFromProps","nextProps","transition","_proto","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","_this$props4","getSnapshotBeforeUpdate","lastFocus","restoreFocusOptions","render","_this$props5","children","renderDialog","_this$props5$role","role","className","style","onExit","onExiting","onEnter","onEntering","onEntered","dialogProps","undefined","tabIndex","cloneElement","unmountOnExit","createPortal","Fragment","Component","bool","any","func","oneOfType","oneOf","string","elementType","shape","preventScroll","object","isRequired","defaultProps","forwardRef","ModalWithContainer","resolved","Manager","_Inner"],"sources":["/Users/erakastrati/Desktop/HMS-frontend/node_modules/react-overlays/esm/Modal.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\r\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\r\n\r\n/* eslint-disable react/prop-types */\r\nimport activeElement from 'dom-helpers/activeElement';\r\nimport contains from 'dom-helpers/contains';\r\nimport canUseDOM from 'dom-helpers/canUseDOM';\r\nimport listen from 'dom-helpers/listen';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ModalManager from './ModalManager';\r\nimport ownerDocument from './utils/ownerDocument';\r\nimport useWaitForDOMRef from './utils/useWaitForDOMRef';\r\nvar modalManager = new ModalManager();\r\n\r\nfunction omitProps(props, propTypes) {\r\n  var keys = Object.keys(props);\r\n  var newProps = {};\r\n  keys.forEach(function (prop) {\r\n    if (!Object.prototype.hasOwnProperty.call(propTypes, prop)) {\r\n      newProps[prop] = props[prop];\r\n    }\r\n  });\r\n  return newProps;\r\n}\r\n/**\r\n * Love them or hate them, `<Modal />` provides a solid foundation for creating dialogs, lightboxes, or whatever else.\r\n * The Modal component renders its `children` node in front of a backdrop component.\r\n *\r\n * The Modal offers a few helpful features over using just a `<Portal/>` component and some styles:\r\n *\r\n * - Manages dialog stacking when one-at-a-time just isn't enough.\r\n * - Creates a backdrop, for disabling interaction below the modal.\r\n * - It properly manages focus; moving to the modal content, and keeping it there until the modal is closed.\r\n * - It disables scrolling of the page content while open.\r\n * - Adds the appropriate ARIA roles are automatically.\r\n * - Easily pluggable animations via a `<Transition/>` component.\r\n *\r\n * Note that, in the same way the backdrop element prevents users from clicking or interacting\r\n * with the page content underneath the Modal, Screen readers also need to be signaled to not to\r\n * interact with page content while the Modal is open. To do this, we use a common technique of applying\r\n * the `aria-hidden='true'` attribute to the non-Modal elements in the Modal `container`. This means that for\r\n * a Modal to be truly modal, it should have a `container` that is _outside_ your app's\r\n * React hierarchy (such as the default: document.body).\r\n */\r\n\r\n\r\nvar Modal =\r\n/*#__PURE__*/\r\nfunction (_React$Component) {\r\n  _inheritsLoose(Modal, _React$Component);\r\n\r\n  function Modal() {\r\n    var _this;\r\n\r\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      _args[_key] = arguments[_key];\r\n    }\r\n\r\n    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\r\n    _this.state = {\r\n      exited: !_this.props.show\r\n    };\r\n\r\n    _this.onShow = function () {\r\n      var _this$props = _this.props,\r\n          container = _this$props.container,\r\n          containerClassName = _this$props.containerClassName,\r\n          manager = _this$props.manager,\r\n          onShow = _this$props.onShow;\r\n      manager.add(_assertThisInitialized(_this), container, containerClassName);\r\n      _this.removeKeydownListener = listen(document, 'keydown', _this.handleDocumentKeyDown);\r\n      _this.removeFocusListener = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\r\n      // and so steals focus from it\r\n      function () {\r\n        return setTimeout(_this.enforceFocus);\r\n      }, true);\r\n\r\n      if (onShow) {\r\n        onShow();\r\n      } // autofocus after onShow, to not trigger a focus event for previous\r\n      // modals before this one is shown.\r\n\r\n\r\n      _this.autoFocus();\r\n    };\r\n\r\n    _this.onHide = function () {\r\n      _this.props.manager.remove(_assertThisInitialized(_this));\r\n\r\n      _this.removeKeydownListener();\r\n\r\n      _this.removeFocusListener();\r\n\r\n      if (_this.props.restoreFocus) {\r\n        _this.restoreLastFocus();\r\n      }\r\n    };\r\n\r\n    _this.setDialogRef = function (ref) {\r\n      _this.dialog = ref;\r\n    };\r\n\r\n    _this.setBackdropRef = function (ref) {\r\n      _this.backdrop = ref && ReactDOM.findDOMNode(ref);\r\n    };\r\n\r\n    _this.handleHidden = function () {\r\n      _this.setState({\r\n        exited: true\r\n      });\r\n\r\n      _this.onHide();\r\n\r\n      if (_this.props.onExited) {\r\n        var _this$props2;\r\n\r\n        (_this$props2 = _this.props).onExited.apply(_this$props2, arguments);\r\n      }\r\n    };\r\n\r\n    _this.handleBackdropClick = function (e) {\r\n      if (e.target !== e.currentTarget) {\r\n        return;\r\n      }\r\n\r\n      if (_this.props.onBackdropClick) {\r\n        _this.props.onBackdropClick(e);\r\n      }\r\n\r\n      if (_this.props.backdrop === true) {\r\n        _this.props.onHide();\r\n      }\r\n    };\r\n\r\n    _this.handleDocumentKeyDown = function (e) {\r\n      if (_this.props.keyboard && e.keyCode === 27 && _this.isTopModal()) {\r\n        if (_this.props.onEscapeKeyDown) {\r\n          _this.props.onEscapeKeyDown(e);\r\n        }\r\n\r\n        _this.props.onHide();\r\n      }\r\n    };\r\n\r\n    _this.enforceFocus = function () {\r\n      if (!_this.props.enforceFocus || !_this._isMounted || !_this.isTopModal()) {\r\n        return;\r\n      }\r\n\r\n      var currentActiveElement = activeElement(ownerDocument(_assertThisInitialized(_this)));\r\n\r\n      if (_this.dialog && !contains(_this.dialog, currentActiveElement)) {\r\n        _this.dialog.focus();\r\n      }\r\n    };\r\n\r\n    _this.renderBackdrop = function () {\r\n      var _this$props3 = _this.props,\r\n          renderBackdrop = _this$props3.renderBackdrop,\r\n          Transition = _this$props3.backdropTransition;\r\n      var backdrop = renderBackdrop({\r\n        ref: _this.setBackdropRef,\r\n        onClick: _this.handleBackdropClick\r\n      });\r\n\r\n      if (Transition) {\r\n        backdrop = React.createElement(Transition, {\r\n          appear: true,\r\n          \"in\": _this.props.show\r\n        }, backdrop);\r\n      }\r\n\r\n      return backdrop;\r\n    };\r\n\r\n    return _this;\r\n  }\r\n\r\n  Modal.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps) {\r\n    if (nextProps.show) {\r\n      return {\r\n        exited: false\r\n      };\r\n    }\r\n\r\n    if (!nextProps.transition) {\r\n      // Otherwise let handleHidden take care of marking exited.\r\n      return {\r\n        exited: true\r\n      };\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  var _proto = Modal.prototype;\r\n\r\n  _proto.componentDidMount = function componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    if (this.props.show) {\r\n      this.onShow();\r\n    }\r\n  };\r\n\r\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\r\n    var transition = this.props.transition;\r\n\r\n    if (prevProps.show && !this.props.show && !transition) {\r\n      // Otherwise handleHidden will call this.\r\n      this.onHide();\r\n    } else if (!prevProps.show && this.props.show) {\r\n      this.onShow();\r\n    }\r\n  };\r\n\r\n  _proto.componentWillUnmount = function componentWillUnmount() {\r\n    var _this$props4 = this.props,\r\n        show = _this$props4.show,\r\n        transition = _this$props4.transition;\r\n    this._isMounted = false;\r\n\r\n    if (show || transition && !this.state.exited) {\r\n      this.onHide();\r\n    }\r\n  };\r\n\r\n  _proto.getSnapshotBeforeUpdate = function getSnapshotBeforeUpdate(prevProps) {\r\n    if (canUseDOM && !prevProps.show && this.props.show) {\r\n      this.lastFocus = activeElement();\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  _proto.restoreLastFocus = function restoreLastFocus() {\r\n    // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\r\n    if (this.lastFocus && this.lastFocus.focus) {\r\n      this.lastFocus.focus(this.props.restoreFocusOptions);\r\n      this.lastFocus = null;\r\n    }\r\n  };\r\n\r\n  _proto.autoFocus = function autoFocus() {\r\n    if (!this.props.autoFocus) return;\r\n    var currentActiveElement = activeElement(ownerDocument(this));\r\n\r\n    if (this.dialog && !contains(this.dialog, currentActiveElement)) {\r\n      this.lastFocus = currentActiveElement;\r\n      this.dialog.focus();\r\n    }\r\n  };\r\n\r\n  _proto.isTopModal = function isTopModal() {\r\n    return this.props.manager.isTopModal(this);\r\n  };\r\n\r\n  _proto.render = function render() {\r\n    var _this$props5 = this.props,\r\n        show = _this$props5.show,\r\n        container = _this$props5.container,\r\n        children = _this$props5.children,\r\n        renderDialog = _this$props5.renderDialog,\r\n        _this$props5$role = _this$props5.role,\r\n        role = _this$props5$role === void 0 ? 'dialog' : _this$props5$role,\r\n        Transition = _this$props5.transition,\r\n        backdrop = _this$props5.backdrop,\r\n        className = _this$props5.className,\r\n        style = _this$props5.style,\r\n        onExit = _this$props5.onExit,\r\n        onExiting = _this$props5.onExiting,\r\n        onEnter = _this$props5.onEnter,\r\n        onEntering = _this$props5.onEntering,\r\n        onEntered = _this$props5.onEntered,\r\n        props = _objectWithoutPropertiesLoose(_this$props5, [\"show\", \"container\", \"children\", \"renderDialog\", \"role\", \"transition\", \"backdrop\", \"className\", \"style\", \"onExit\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"]);\r\n\r\n    if (!(show || Transition && !this.state.exited)) {\r\n      return null;\r\n    }\r\n\r\n    var dialogProps = _extends({\r\n      role: role,\r\n      ref: this.setDialogRef,\r\n      // apparently only works on the dialog role element\r\n      'aria-modal': role === 'dialog' ? true : undefined\r\n    }, omitProps(props, Modal.propTypes), {\r\n      style: style,\r\n      className: className,\r\n      tabIndex: '-1'\r\n    });\r\n\r\n    var dialog = renderDialog ? renderDialog(dialogProps) : React.createElement(\"div\", dialogProps, React.cloneElement(children, {\r\n      role: 'document'\r\n    }));\r\n\r\n    if (Transition) {\r\n      dialog = React.createElement(Transition, {\r\n        appear: true,\r\n        unmountOnExit: true,\r\n        \"in\": show,\r\n        onExit: onExit,\r\n        onExiting: onExiting,\r\n        onExited: this.handleHidden,\r\n        onEnter: onEnter,\r\n        onEntering: onEntering,\r\n        onEntered: onEntered\r\n      }, dialog);\r\n    }\r\n\r\n    return ReactDOM.createPortal(React.createElement(React.Fragment, null, backdrop && this.renderBackdrop(), dialog), container);\r\n  };\r\n\r\n  return Modal;\r\n}(React.Component); // dumb HOC for the sake react-docgen\r\n\r\n\r\nModal.propTypes = {\r\n  /**\r\n   * Set the visibility of the Modal\r\n   */\r\n  show: PropTypes.bool,\r\n\r\n  /**\r\n   * A DOM element, a `ref` to an element, or function that returns either. The Modal is appended to it's `container` element.\r\n   *\r\n   * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the\r\n   * page content can be placed behind a virtual backdrop as well as a visual one.\r\n   */\r\n  container: PropTypes.any,\r\n\r\n  /**\r\n   * A callback fired when the Modal is opening.\r\n   */\r\n  onShow: PropTypes.func,\r\n\r\n  /**\r\n   * A callback fired when either the backdrop is clicked, or the escape key is pressed.\r\n   *\r\n   * The `onHide` callback only signals intent from the Modal,\r\n   * you must actually set the `show` prop to `false` for the Modal to close.\r\n   */\r\n  onHide: PropTypes.func,\r\n\r\n  /**\r\n   * Include a backdrop component.\r\n   */\r\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\r\n\r\n  /**\r\n   * A function that returns the dialog component. Useful for custom\r\n   * rendering. **Note:** the component should make sure to apply the provided ref.\r\n   *\r\n   * ```js\r\n   *  renderDialog={props => <MyDialog {...props} />}\r\n   * ```\r\n   */\r\n  renderDialog: PropTypes.func,\r\n\r\n  /**\r\n   * A function that returns a backdrop component. Useful for custom\r\n   * backdrop rendering.\r\n   *\r\n   * ```js\r\n   *  renderBackdrop={props => <MyBackdrop {...props} />}\r\n   * ```\r\n   */\r\n  renderBackdrop: PropTypes.func,\r\n\r\n  /**\r\n   * A callback fired when the escape key, if specified in `keyboard`, is pressed.\r\n   */\r\n  onEscapeKeyDown: PropTypes.func,\r\n\r\n  /**\r\n   * A callback fired when the backdrop, if specified, is clicked.\r\n   */\r\n  onBackdropClick: PropTypes.func,\r\n\r\n  /**\r\n   * A css class or set of classes applied to the modal container when the modal is open,\r\n   * and removed when it is closed.\r\n   */\r\n  containerClassName: PropTypes.string,\r\n\r\n  /**\r\n   * Close the modal when escape key is pressed\r\n   */\r\n  keyboard: PropTypes.bool,\r\n\r\n  /**\r\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\r\n   * to control animations for the dialog component.\r\n   */\r\n  transition: PropTypes.elementType,\r\n\r\n  /**\r\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\r\n   * to control animations for the backdrop components.\r\n   */\r\n  backdropTransition: PropTypes.elementType,\r\n\r\n  /**\r\n   * When `true` The modal will automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes. This also\r\n   * works correctly with any Modal children that have the `autoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `false` as it makes the Modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * When `true` The modal will prevent focus from leaving the Modal while open.\r\n   *\r\n   * Generally this should never be set to `false` as it makes the Modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   */\r\n  enforceFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * When `true` The modal will restore focus to previously focused element once\r\n   * modal is hidden\r\n   */\r\n  restoreFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * Options passed to focus function when `restoreFocus` is set to `true`\r\n   *\r\n   * @link  https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#Parameters\r\n   */\r\n  restoreFocusOptions: PropTypes.shape({\r\n    preventScroll: PropTypes.bool\r\n  }),\r\n\r\n  /**\r\n   * Callback fired before the Modal transitions in\r\n   */\r\n  onEnter: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired as the Modal begins to transition in\r\n   */\r\n  onEntering: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired after the Modal finishes transitioning in\r\n   */\r\n  onEntered: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired right before the Modal transitions out\r\n   */\r\n  onExit: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired as the Modal begins to transition out\r\n   */\r\n  onExiting: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired after the Modal finishes transitioning out\r\n   */\r\n  onExited: PropTypes.func,\r\n\r\n  /**\r\n   * A ModalManager instance used to track and manage the state of open\r\n   * Modals. Useful when customizing how modals interact within a container\r\n   */\r\n  manager: PropTypes.object.isRequired\r\n};\r\nModal.defaultProps = {\r\n  show: false,\r\n  role: 'dialog',\r\n  backdrop: true,\r\n  keyboard: true,\r\n  autoFocus: true,\r\n  enforceFocus: true,\r\n  restoreFocus: true,\r\n  onHide: function onHide() {},\r\n  manager: modalManager,\r\n  renderBackdrop: function renderBackdrop(props) {\r\n    return React.createElement(\"div\", props);\r\n  }\r\n};\r\n\r\nfunction forwardRef(Component) {\r\n  // eslint-disable-next-line react/display-name\r\n  var ModalWithContainer = React.forwardRef(function (props, ref) {\r\n    var resolved = useWaitForDOMRef(props.container);\r\n    return resolved ? React.createElement(Component, _extends({}, props, {\r\n      ref: ref,\r\n      container: resolved\r\n    })) : null;\r\n  });\r\n  ModalWithContainer.Manager = ModalManager;\r\n  ModalWithContainer._Inner = Component;\r\n  return ModalWithContainer;\r\n}\r\n\r\nvar ModalWithContainer = forwardRef(Modal);\r\nModalWithContainer.Manager = ModalManager;\r\nexport default ModalWithContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}