{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  /**\r\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\r\n   * @type {string|number}\r\n   * @required\r\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /**\r\n   *  Which event when fired outside the component will cause it to be closed.\r\n   *\r\n   * _see [DropdownMenu](#menu-props) for more details_\r\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\r\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\r\n * are passed directly to the default `Dropdown.Menu`.\r\n *\r\n * _All unknown props are passed through to the `Dropdown` component._ Only\r\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\r\n * along with menu related props are passed to the `Dropdown.Menu`\r\n */\n\nvar DropdownButton = React.forwardRef(function (_ref, ref) {\n  var title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      variant = _ref.variant,\n      size = _ref.size,\n      menuRole = _ref.menuRole,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      id = _ref.id,\n      props = _objectWithoutPropertiesLoose(_ref, [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuRole\", \"disabled\", \"href\", \"id\"]);\n\n  return React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props), React.createElement(Dropdown.Toggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix\n  }, title), React.createElement(Dropdown.Menu, {\n    role: menuRole,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","Dropdown","propTypes","id","any","href","string","onClick","func","title","node","isRequired","disabled","bool","menuRole","rootCloseEvent","bsPrefix","variant","size","DropdownButton","forwardRef","_ref","ref","children","props","createElement","Toggle","childBsPrefix","Menu","role","displayName"],"sources":["C:/Users/hp/Desktop/frontenddd/HMS-frontend/node_modules/react-bootstrap/esm/DropdownButton.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dropdown from './Dropdown';\r\nvar propTypes = {\r\n  /**\r\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\r\n   * @type {string|number}\r\n   * @required\r\n   */\r\n  id: PropTypes.any,\r\n\r\n  /** An `href` passed to the Toggle component */\r\n  href: PropTypes.string,\r\n\r\n  /** An `onClick` handler passed to the Toggle component */\r\n  onClick: PropTypes.func,\r\n\r\n  /** The content of the non-toggle Button.  */\r\n  title: PropTypes.node.isRequired,\r\n\r\n  /** Disables both Buttons  */\r\n  disabled: PropTypes.bool,\r\n\r\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\r\n  menuRole: PropTypes.string,\r\n\r\n  /**\r\n   *  Which event when fired outside the component will cause it to be closed.\r\n   *\r\n   * _see [DropdownMenu](#menu-props) for more details_\r\n   */\r\n  rootCloseEvent: PropTypes.string,\r\n\r\n  /** @ignore */\r\n  bsPrefix: PropTypes.string,\r\n\r\n  /** @ignore */\r\n  variant: PropTypes.string,\r\n\r\n  /** @ignore */\r\n  size: PropTypes.string\r\n};\r\n/**\r\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\r\n * are passed directly to the default `Dropdown.Menu`.\r\n *\r\n * _All unknown props are passed through to the `Dropdown` component._ Only\r\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\r\n * along with menu related props are passed to the `Dropdown.Menu`\r\n */\r\n\r\nvar DropdownButton = React.forwardRef(function (_ref, ref) {\r\n  var title = _ref.title,\r\n      children = _ref.children,\r\n      bsPrefix = _ref.bsPrefix,\r\n      rootCloseEvent = _ref.rootCloseEvent,\r\n      variant = _ref.variant,\r\n      size = _ref.size,\r\n      menuRole = _ref.menuRole,\r\n      disabled = _ref.disabled,\r\n      href = _ref.href,\r\n      id = _ref.id,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"variant\", \"size\", \"menuRole\", \"disabled\", \"href\", \"id\"]);\r\n\r\n  return React.createElement(Dropdown, _extends({\r\n    ref: ref\r\n  }, props), React.createElement(Dropdown.Toggle, {\r\n    id: id,\r\n    href: href,\r\n    size: size,\r\n    variant: variant,\r\n    disabled: disabled,\r\n    childBsPrefix: bsPrefix\r\n  }, title), React.createElement(Dropdown.Menu, {\r\n    role: menuRole,\r\n    rootCloseEvent: rootCloseEvent\r\n  }, children));\r\n});\r\nDropdownButton.displayName = 'DropdownButton';\r\nDropdownButton.propTypes = propTypes;\r\nexport default DropdownButton;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,IAAIC,SAAS,GAAG;EACd;AACF;AACA;AACA;AACA;EACEC,EAAE,EAAEH,SAAS,CAACI,GANA;;EAQd;EACAC,IAAI,EAAEL,SAAS,CAACM,MATF;;EAWd;EACAC,OAAO,EAAEP,SAAS,CAACQ,IAZL;;EAcd;EACAC,KAAK,EAAET,SAAS,CAACU,IAAV,CAAeC,UAfR;;EAiBd;EACAC,QAAQ,EAAEZ,SAAS,CAACa,IAlBN;;EAoBd;EACAC,QAAQ,EAAEd,SAAS,CAACM,MArBN;;EAuBd;AACF;AACA;AACA;AACA;EACES,cAAc,EAAEf,SAAS,CAACM,MA5BZ;;EA8Bd;EACAU,QAAQ,EAAEhB,SAAS,CAACM,MA/BN;;EAiCd;EACAW,OAAO,EAAEjB,SAAS,CAACM,MAlCL;;EAoCd;EACAY,IAAI,EAAElB,SAAS,CAACM;AArCF,CAAhB;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIa,cAAc,GAAGpB,KAAK,CAACqB,UAAN,CAAiB,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;EACzD,IAAIb,KAAK,GAAGY,IAAI,CAACZ,KAAjB;EAAA,IACIc,QAAQ,GAAGF,IAAI,CAACE,QADpB;EAAA,IAEIP,QAAQ,GAAGK,IAAI,CAACL,QAFpB;EAAA,IAGID,cAAc,GAAGM,IAAI,CAACN,cAH1B;EAAA,IAIIE,OAAO,GAAGI,IAAI,CAACJ,OAJnB;EAAA,IAKIC,IAAI,GAAGG,IAAI,CAACH,IALhB;EAAA,IAMIJ,QAAQ,GAAGO,IAAI,CAACP,QANpB;EAAA,IAOIF,QAAQ,GAAGS,IAAI,CAACT,QAPpB;EAAA,IAQIP,IAAI,GAAGgB,IAAI,CAAChB,IARhB;EAAA,IASIF,EAAE,GAAGkB,IAAI,CAAClB,EATd;EAAA,IAUIqB,KAAK,GAAG1B,6BAA6B,CAACuB,IAAD,EAAO,CAAC,OAAD,EAAU,UAAV,EAAsB,UAAtB,EAAkC,gBAAlC,EAAoD,SAApD,EAA+D,MAA/D,EAAuE,UAAvE,EAAmF,UAAnF,EAA+F,MAA/F,EAAuG,IAAvG,CAAP,CAVzC;;EAYA,OAAOtB,KAAK,CAAC0B,aAAN,CAAoBxB,QAApB,EAA8BJ,QAAQ,CAAC;IAC5CyB,GAAG,EAAEA;EADuC,CAAD,EAE1CE,KAF0C,CAAtC,EAEIzB,KAAK,CAAC0B,aAAN,CAAoBxB,QAAQ,CAACyB,MAA7B,EAAqC;IAC9CvB,EAAE,EAAEA,EAD0C;IAE9CE,IAAI,EAAEA,IAFwC;IAG9Ca,IAAI,EAAEA,IAHwC;IAI9CD,OAAO,EAAEA,OAJqC;IAK9CL,QAAQ,EAAEA,QALoC;IAM9Ce,aAAa,EAAEX;EAN+B,CAArC,EAORP,KAPQ,CAFJ,EASIV,KAAK,CAAC0B,aAAN,CAAoBxB,QAAQ,CAAC2B,IAA7B,EAAmC;IAC5CC,IAAI,EAAEf,QADsC;IAE5CC,cAAc,EAAEA;EAF4B,CAAnC,EAGRQ,QAHQ,CATJ,CAAP;AAaD,CA1BoB,CAArB;AA2BAJ,cAAc,CAACW,WAAf,GAA6B,gBAA7B;AACAX,cAAc,CAACjB,SAAf,GAA2BA,SAA3B;AACA,eAAeiB,cAAf"},"metadata":{},"sourceType":"module"}