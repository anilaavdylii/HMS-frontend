{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\hp\\\\Desktop\\\\lab\\\\HMS-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\hp\\\\Desktop\\\\lab\\\\HMS-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\lab\\\\HMS-frontend\\\\src\\\\pages\\\\patient\\\\PatientAppointment.jsx\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { useEffect, useState } from \"react\";\nimport { axiosInstance } from \"../../config\";\nexport default function patientAppointment(_ref) {\n  var _this = this;\n\n  var doctors = _ref.doctors;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      doctorId = _useState2[0],\n      setDoctorId = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      date = _useState4[0],\n      setDate = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      description = _useState6[0],\n      setDescription = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      success = _useState10[0],\n      setSuccess = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      slots = _useState12[0],\n      setSlots = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      slotNumber = _useState14[0],\n      setSlotNumber = _useState14[1];\n\n  useEffect(function () {\n    function handleDateTime() {\n      return _handleDateTime.apply(this, arguments);\n    }\n\n    function _handleDateTime() {\n      _handleDateTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                doctors.content && setDoctorId(doctors.content[0].id);\n                _context.prev = 1;\n                _context.next = 4;\n                return axiosInstance.post(\"/slots\", {\n                  doctorId: doctorId,\n                  date: date\n                });\n\n              case 4:\n                res = _context.sent;\n                setSlots(res.data);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n\n                if (_context.t0.response) {\n                  console.log(_context.t0.response);\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 8]]);\n      }));\n      return _handleDateTime.apply(this, arguments);\n    }\n\n    handleDateTime();\n  }, [date, doctorId]);\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e) {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              setError(\"\");\n              setSuccess(\"\");\n              _context2.prev = 3;\n              _context2.next = 6;\n              return axiosInstance.post(\"/users/appointment\", {\n                doctorId: doctorId,\n                date: date,\n                description: description,\n                slot: {\n                  slotNumber: slotNumber\n                }\n              });\n\n            case 6:\n              res = _context2.sent;\n              res && setSuccess(\"Your appointment has been sent successfully!\");\n              console.log(res);\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](3);\n\n              if (_context2.t0.response) {\n                setError(\"You failed to submit the appointment!\");\n                console.log(_context2.t0.response);\n              }\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 11]]);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientAppointment container top text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, \"Make an Appointment\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"Choose your doctor:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"doctor\",\n    className: \"form-control w-25\",\n    required: true,\n    value: doctorId,\n    onChange: function onChange(e) {\n      return setDoctorId(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }\n  }, doctors.content ? doctors.content.map(function (doctor) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: doctor.id,\n      key: doctor.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, doctor.firstName, \" \", doctor.lastName);\n  }) : /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }\n  }, \"Loading the data...\"))), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, \"Input your date and time appointment:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    placeholder: \"Appointment Date\",\n    className: \"mt-0 form-control w-25\",\n    required: true,\n    value: date,\n    onChange: function onChange(e) {\n      return setDate(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"time\",\n    className: \"form-control w-25\",\n    required: true,\n    value: slotNumber,\n    onChange: function onChange(e) {\n      return setSlotNumber(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }, slots && slots.map(function (slot, i) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: slot.slotNumber,\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, slot.timeSlot);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control w-75\",\n    name: \"description\",\n    cols: \"30\",\n    rows: \"10\",\n    placeholder: \"Description\",\n    required: true,\n    value: description,\n    onChange: function onChange(e) {\n      return setDescription(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"mt-3 ms-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, \"Apply Appointment\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, success)));\n}","map":{"version":3,"names":["React","useEffect","useState","axiosInstance","patientAppointment","doctors","doctorId","setDoctorId","date","setDate","description","setDescription","error","setError","success","setSuccess","slots","setSlots","slotNumber","setSlotNumber","handleDateTime","content","id","post","res","data","response","console","log","handleSubmit","e","preventDefault","slot","target","value","map","doctor","firstName","lastName","i","timeSlot"],"sources":["C:/Users/hp/Desktop/lab/HMS-frontend/src/pages/patient/PatientAppointment.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { axiosInstance } from \"../../config\";\r\n\r\nexport default function patientAppointment({ doctors }) {\r\n\tconst [doctorId, setDoctorId] = useState(\"\");\r\n\tconst [date, setDate] = useState(\"\");\r\n\tconst [description, setDescription] = useState(\"\");\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst [success, setSuccess] = useState(\"\");\r\n\tconst [slots, setSlots] = useState(\"\");\r\n\tconst [slotNumber, setSlotNumber] = useState(\"\");\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function handleDateTime() {\r\n\t\t\tdoctors.content && setDoctorId(doctors.content[0].id);\r\n\t\t\ttry {\r\n\t\t\t\tconst res = await axiosInstance.post(\"/slots\", {\r\n\t\t\t\t\tdoctorId,\r\n\t\t\t\t\tdate,\r\n\t\t\t\t});\r\n\t\t\t\tsetSlots(res.data);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tif (err.response) {\r\n\t\t\t\t\tconsole.log(err.response);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\thandleDateTime();\r\n\t}, [date, doctorId]);\r\n\r\n\tasync function handleSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\tsetError(\"\");\r\n\t\tsetSuccess(\"\");\r\n\r\n\t\ttry {\r\n\t\t\tconst res = await axiosInstance.post(\"/users/appointment\", {\r\n\t\t\t\tdoctorId,\r\n\t\t\t\tdate,\r\n\t\t\t\tdescription,\r\n\t\t\t\tslot: { slotNumber: slotNumber },\r\n\t\t\t});\r\n\t\t\tres && setSuccess(\"Your appointment has been sent successfully!\");\r\n\t\t\tconsole.log(res);\r\n\t\t} catch (err) {\r\n\t\t\tif (err.response) {\r\n\t\t\t\tsetError(\"You failed to submit the appointment!\");\r\n\t\t\t\tconsole.log(err.response);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"patientAppointment container top text-center\">\r\n\t\t\t<h1>Make an Appointment</h1>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<label className=\"form-label\">Choose your doctor:</label>\r\n\t\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t<select name=\"doctor\" className=\"form-control w-25\" required value={doctorId} onChange={(e) => setDoctorId(e.target.value)}>\r\n\t\t\t\t\t\t{doctors.content ? (\r\n\t\t\t\t\t\t\tdoctors.content.map((doctor) => (\r\n\t\t\t\t\t\t\t\t<option value={doctor.id} key={doctor.id}>\r\n\t\t\t\t\t\t\t\t\t{doctor.firstName} {doctor.lastName}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<option>Loading the data...</option>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<label className=\"form-label mt-4\">Input your date and time appointment:</label>\r\n\t\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tplaceholder=\"Appointment Date\"\r\n\t\t\t\t\t\tclassName=\"mt-0 form-control w-25\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={date}\r\n\t\t\t\t\t\tonChange={(e) => setDate(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<select name=\"time\" className=\"form-control w-25\" required value={slotNumber} onChange={(e) => setSlotNumber(e.target.value)}>\r\n\t\t\t\t\t\t{slots &&\r\n\t\t\t\t\t\t\tslots.map((slot, i) => (\r\n\t\t\t\t\t\t\t\t<option value={slot.slotNumber} key={i}>\r\n\t\t\t\t\t\t\t\t\t{slot.timeSlot}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"d-flex justify-content-center\">\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName=\"form-control w-75\"\r\n\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\tcols=\"30\"\r\n\t\t\t\t\t\trows=\"10\"\r\n\t\t\t\t\t\tplaceholder=\"Description\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\tonChange={(e) => setDescription(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<br />\r\n\t\t\t\t<button className=\"mt-3 ms-5\">Apply Appointment</button>\r\n\t\t\t\t<div className=\"error\">{error}</div>\r\n\t\t\t\t<div className=\"success\">{success}</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}