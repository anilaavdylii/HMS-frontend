{"ast":null,"code":"import { createParser, system } from \"@styled-system/core\";\nimport { positiveOrNegative } from \"../utils\";\nvar config = {\n  margin: {\n    property: \"margin\",\n    transform: positiveOrNegative,\n    scale: \"space\"\n  },\n  m: {\n    property: \"margin\",\n    transform: positiveOrNegative,\n    scale: \"space\"\n  },\n  marginTop: {\n    property: \"marginTop\",\n    transform: positiveOrNegative,\n    scale: \"space\"\n  },\n  mt: {\n    property: \"marginTop\",\n    transform: positiveOrNegative,\n    scale: \"space\"\n  },\n  marginRight: {\n    property: \"marginRight\",\n    transform: positiveOrNegative,\n    scale: \"space\"\n  },\n  mr: {\n    property: \"marginRight\",\n    transform: positiveOrNegative,\n    scale: \"space\"\n  },\n  marginBottom: {\n    property: \"marginBottom\",\n    transform: positiveOrNegative,\n    scale: \"space\"\n  },\n  mb: {\n    property: \"marginBottom\",\n    transform: positiveOrNegative,\n    scale: \"space\"\n  },\n  marginLeft: {\n    property: \"marginLeft\",\n    transform: positiveOrNegative,\n    scale: \"space\"\n  },\n  ml: {\n    property: \"marginLeft\",\n    transform: positiveOrNegative,\n    scale: \"space\"\n  },\n  marginX: {\n    properties: [\"marginLeft\", \"marginRight\"],\n    transform: positiveOrNegative,\n    scale: \"space\"\n  },\n  mx: {\n    properties: [\"marginLeft\", \"marginRight\"],\n    transform: positiveOrNegative,\n    scale: \"space\"\n  },\n  marginY: {\n    properties: [\"marginTop\", \"marginBottom\"],\n    transform: positiveOrNegative,\n    scale: \"space\"\n  },\n  my: {\n    properties: [\"marginTop\", \"marginBottom\"],\n    transform: positiveOrNegative,\n    scale: \"space\"\n  },\n  padding: {\n    property: \"padding\",\n    scale: \"space\"\n  },\n  p: {\n    property: \"padding\",\n    scale: \"space\"\n  },\n  paddingTop: {\n    property: \"paddingTop\",\n    scale: \"space\"\n  },\n  pt: {\n    property: \"paddingTop\",\n    scale: \"space\"\n  },\n  paddingRight: {\n    property: \"paddingRight\",\n    scale: \"space\"\n  },\n  pr: {\n    property: \"paddingRight\",\n    scale: \"space\"\n  },\n  paddingBottom: {\n    property: \"paddingBottom\",\n    scale: \"space\"\n  },\n  pb: {\n    property: \"paddingBottom\",\n    scale: \"space\"\n  },\n  paddingLeft: {\n    property: \"paddingLeft\",\n    scale: \"space\"\n  },\n  pl: {\n    property: \"paddingLeft\",\n    scale: \"space\"\n  },\n  paddingX: {\n    properties: [\"paddingLeft\", \"paddingRight\"],\n    scale: \"space\"\n  },\n  px: {\n    properties: [\"paddingLeft\", \"paddingRight\"],\n    scale: \"space\"\n  },\n  paddingY: {\n    properties: [\"paddingTop\", \"paddingBottom\"],\n    scale: \"space\"\n  },\n  py: {\n    properties: [\"paddingTop\", \"paddingBottom\"],\n    scale: \"space\"\n  }\n};\n/**\n * Types for space related CSS properties\n */\n\n/**\n * Converts shorthand or longhand margin and padding props to margin and padding CSS declarations\n *\n * - Numbers from 0-4 (or the length of theme.space) are converted to values on the spacing scale.\n * - Negative values can be used for negative margins.\n * - Numbers greater than the length of the theme.space array are converted to raw pixel values.\n * - String values are passed as raw CSS values.\n * - Array values are converted into responsive values.\n */\n\nexport var space = system(config);\nexport var spaceParser = createParser(config);","map":{"version":3,"sources":["../../../src/config/space.ts"],"names":["config","margin","property","transform","scale","m","marginTop","mt","marginRight","mr","marginBottom","mb","marginLeft","ml","marginX","properties","mx","marginY","my","padding","p","paddingTop","pt","paddingRight","pr","paddingBottom","pb","paddingLeft","pl","paddingX","px","paddingY","py","space","system","spaceParser","createParser"],"mappings":"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","sourcesContent":["import * as CSS from \"csstype\"\nimport { createParser, Config, system } from \"@styled-system/core\"\nimport { positiveOrNegative, ResponsiveValue, Length } from \"../utils\"\n\nconst config: Config = {\n  margin: {\n    property: \"margin\",\n    transform: positiveOrNegative,\n    scale: \"space\",\n  },\n  m: {\n    property: \"margin\",\n    transform: positiveOrNegative,\n    scale: \"space\",\n  },\n  marginTop: {\n    property: \"marginTop\",\n    transform: positiveOrNegative,\n    scale: \"space\",\n  },\n  mt: {\n    property: \"marginTop\",\n    transform: positiveOrNegative,\n    scale: \"space\",\n  },\n  marginRight: {\n    property: \"marginRight\",\n    transform: positiveOrNegative,\n    scale: \"space\",\n  },\n  mr: {\n    property: \"marginRight\",\n    transform: positiveOrNegative,\n    scale: \"space\",\n  },\n  marginBottom: {\n    property: \"marginBottom\",\n    transform: positiveOrNegative,\n    scale: \"space\",\n  },\n  mb: {\n    property: \"marginBottom\",\n    transform: positiveOrNegative,\n    scale: \"space\",\n  },\n  marginLeft: {\n    property: \"marginLeft\",\n    transform: positiveOrNegative,\n    scale: \"space\",\n  },\n  ml: {\n    property: \"marginLeft\",\n    transform: positiveOrNegative,\n    scale: \"space\",\n  },\n  marginX: {\n    properties: [\"marginLeft\", \"marginRight\"],\n    transform: positiveOrNegative,\n    scale: \"space\",\n  },\n  mx: {\n    properties: [\"marginLeft\", \"marginRight\"],\n    transform: positiveOrNegative,\n    scale: \"space\",\n  },\n  marginY: {\n    properties: [\"marginTop\", \"marginBottom\"],\n    transform: positiveOrNegative,\n    scale: \"space\",\n  },\n  my: {\n    properties: [\"marginTop\", \"marginBottom\"],\n    transform: positiveOrNegative,\n    scale: \"space\",\n  },\n  padding: {\n    property: \"padding\",\n    scale: \"space\",\n  },\n  p: {\n    property: \"padding\",\n    scale: \"space\",\n  },\n  paddingTop: {\n    property: \"paddingTop\",\n    scale: \"space\",\n  },\n  pt: {\n    property: \"paddingTop\",\n    scale: \"space\",\n  },\n  paddingRight: {\n    property: \"paddingRight\",\n    scale: \"space\",\n  },\n  pr: {\n    property: \"paddingRight\",\n    scale: \"space\",\n  },\n  paddingBottom: {\n    property: \"paddingBottom\",\n    scale: \"space\",\n  },\n  pb: {\n    property: \"paddingBottom\",\n    scale: \"space\",\n  },\n  paddingLeft: {\n    property: \"paddingLeft\",\n    scale: \"space\",\n  },\n  pl: {\n    property: \"paddingLeft\",\n    scale: \"space\",\n  },\n  paddingX: {\n    properties: [\"paddingLeft\", \"paddingRight\"],\n    scale: \"space\",\n  },\n  px: {\n    properties: [\"paddingLeft\", \"paddingRight\"],\n    scale: \"space\",\n  },\n  paddingY: {\n    properties: [\"paddingTop\", \"paddingBottom\"],\n    scale: \"space\",\n  },\n  py: {\n    properties: [\"paddingTop\", \"paddingBottom\"],\n    scale: \"space\",\n  },\n}\n\n/**\n * Types for space related CSS properties\n */\nexport interface SpaceProps {\n  /**\n   * Margin on top, left, bottom and right\n   */\n  m?: ResponsiveValue<CSS.Property.Margin<Length>>\n  /**\n   * Margin on top, left, bottom and right\n   */\n  margin?: ResponsiveValue<CSS.Property.Margin<Length>>\n  /**\n   * Margin on top\n   */\n  mt?: ResponsiveValue<CSS.Property.Margin<Length>>\n  /**\n   * Margin on top\n   */\n  marginTop?: ResponsiveValue<CSS.Property.MarginTop<Length>>\n  /**\n   * Margin on right\n   */\n  mr?: ResponsiveValue<CSS.Property.MarginRight<Length>>\n  /**\n   * Margin on right\n   */\n  marginRight?: ResponsiveValue<CSS.Property.MarginRight<Length>>\n  /**\n   * Margin on bottom\n   */\n  mb?: ResponsiveValue<CSS.Property.MarginBottom<Length>>\n  /**\n   * Margin on bottom\n   */\n  marginBottom?: ResponsiveValue<CSS.Property.MarginBottom<Length>>\n  /**\n   * Margin on left\n   */\n  ml?: ResponsiveValue<CSS.Property.MarginLeft<Length>>\n  /**\n   * Margin on left\n   */\n  marginLeft?: ResponsiveValue<CSS.Property.MarginLeft<Length>>\n  /**\n   * Margin on left and right\n   */\n  mx?: ResponsiveValue<CSS.Property.Margin<Length>>\n  /**\n   * Margin on left and right\n   */\n  marginX?: ResponsiveValue<CSS.Property.Margin<Length>>\n  /**\n   * Margin on top and bottom\n   */\n  my?: ResponsiveValue<CSS.Property.Margin<Length>>\n  /**\n   * Margin on top and bottom\n   */\n  marginY?: ResponsiveValue<CSS.Property.Margin<Length>>\n  /**\n   * Padding on top, left, bottom and right\n   */\n  p?: ResponsiveValue<CSS.Property.Padding<Length>>\n  /**\n   * Padding on top, left, bottom and right\n   */\n  padding?: ResponsiveValue<CSS.Property.Padding<Length>>\n  /**\n   * Padding on top\n   */\n  pt?: ResponsiveValue<CSS.Property.PaddingTop<Length>>\n  /**\n   * Padding on top\n   */\n  paddingTop?: ResponsiveValue<CSS.Property.PaddingTop<Length>>\n  /**\n   * Padding on right\n   */\n  pr?: ResponsiveValue<CSS.Property.PaddingRight<Length>>\n  /**\n   * Padding on right\n   */\n  paddingRight?: ResponsiveValue<CSS.Property.PaddingRight<Length>>\n  /**\n   * Padding on bottom\n   */\n  pb?: ResponsiveValue<CSS.Property.PaddingBottom<Length>>\n  /**\n   * Padding on bottom\n   */\n  paddingBottom?: ResponsiveValue<CSS.Property.PaddingBottom<Length>>\n  /**\n   * Padding on left\n   */\n  pl?: ResponsiveValue<CSS.Property.PaddingLeft<Length>>\n  /**\n   * Padding on left\n   */\n  paddingLeft?: ResponsiveValue<CSS.Property.PaddingLeft<Length>>\n  /**\n   * Padding on left and right\n   */\n  px?: ResponsiveValue<CSS.Property.Padding<Length>>\n  /**\n   * Padding on left and right\n   */\n  paddingX?: ResponsiveValue<CSS.Property.Padding<Length>>\n  /**\n   * Padding on top and bottom\n   */\n  py?: ResponsiveValue<CSS.Property.Padding<Length>>\n  /**\n   * Padding on top and bottom\n   */\n  paddingY?: ResponsiveValue<CSS.Property.Padding<Length>>\n}\n\n/**\n * Converts shorthand or longhand margin and padding props to margin and padding CSS declarations\n *\n * - Numbers from 0-4 (or the length of theme.space) are converted to values on the spacing scale.\n * - Negative values can be used for negative margins.\n * - Numbers greater than the length of the theme.space array are converted to raw pixel values.\n * - String values are passed as raw CSS values.\n * - Array values are converted into responsive values.\n */\nexport const space = system(config)\nexport const spaceParser = createParser(config)\n"]},"metadata":{},"sourceType":"module"}