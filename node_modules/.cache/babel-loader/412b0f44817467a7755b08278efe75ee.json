{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { mergeRefs } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { getArrowStyles, getBoxShadow, toTransformOrigin } from \"./popper.utils\";\nimport { usePopper as useBasePopper } from \"./react-popper\";\nexport function usePopper(props) {\n  var _popperJS$state$place, _popperJS$state;\n\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    placement = \"bottom\",\n    preventOverflow = true,\n    fixed = false,\n    flip = true,\n    arrowSize = 8,\n    arrowShadowColor,\n    gutter = 8,\n    arrowPadding = 4,\n    offset: offsetProp,\n    matchWidth,\n    modifiers = []\n  } = props;\n  var [referenceNode, setReferenceNode] = React.useState(null);\n  var [popperNode, setPopperNode] = React.useState(null);\n  var [arrowNode, setArrowNode] = React.useState(null);\n  var offset = offsetProp != null ? offsetProp : [0, gutter];\n  /**\n   * recommended via popper docs\n   * @see https://popper.js.org/react-popper/v2/faq/#why-i-get-render-loop-whenever-i-put-a-function-inside-the-popper-configuration\n   */\n\n  var customModifiers = React.useMemo(() => [// @see https://popper.js.org/docs/v2/modifiers/offset/\n  {\n    name: \"offset\",\n    options: {\n      offset: offset != null ? offset : [0, gutter]\n    },\n    phase: \"main\"\n  }, // @see https://popper.js.org/docs/v2/modifiers/prevent-overflow/\n  {\n    name: \"preventOverflow\",\n    enabled: !!preventOverflow,\n    phase: \"main\"\n  }, // @see https://popper.js.org/docs/v2/modifiers/arrow/\n  {\n    name: \"arrow\",\n    enabled: !!arrowNode,\n    options: {\n      element: arrowNode,\n      padding: arrowPadding\n    },\n    phase: \"main\"\n  }, // @see https://popper.js.org/docs/v2/modifiers/flip/\n  {\n    name: \"flip\",\n    enabled: flip,\n    options: {\n      padding: 8\n    },\n    phase: \"main\"\n  }, {\n    name: \"matchWidth\",\n    enabled: !!matchWidth,\n    phase: \"beforeWrite\",\n    requires: [\"computeStyles\"],\n    fn: _ref2 => {\n      var {\n        state\n      } = _ref2;\n      state.styles.popper.width = state.rects.reference.width + \"px\";\n    },\n    effect: _ref3 => {\n      var {\n        state\n      } = _ref3;\n      return () => {\n        var reference = state.elements.reference;\n        state.elements.popper.style.width = reference.offsetWidth + \"px\";\n      };\n    }\n  }, {\n    name: \"applyArrowHide\",\n    enabled: true,\n    phase: \"write\",\n\n    fn(_ref4) {\n      var {\n        state\n      } = _ref4;\n      var {\n        arrow\n      } = state.elements;\n\n      if (arrow) {\n        var _state$modifiersData$;\n\n        if (((_state$modifiersData$ = state.modifiersData.arrow) == null ? void 0 : _state$modifiersData$.centerOffset) !== 0) {\n          arrow.setAttribute(\"data-hide\", \"\");\n        } else {\n          arrow.removeAttribute(\"data-hide\");\n        }\n      }\n    }\n\n  }], [arrowNode, arrowPadding, flip, preventOverflow, offset, gutter, matchWidth]);\n  var popperJS = useBasePopper(referenceNode, popperNode, {\n    placement,\n    strategy: fixed ? \"fixed\" : \"absolute\",\n    modifiers: customModifiers.concat(modifiers)\n  });\n  /**\n   * Ensure the popper will be correctly positioned with an extra update\n   */\n\n  React.useEffect(() => {\n    popperJS.forceUpdate == null ? void 0 : popperJS.forceUpdate();\n  });\n  var finalPlacement = (_popperJS$state$place = (_popperJS$state = popperJS.state) == null ? void 0 : _popperJS$state.placement) != null ? _popperJS$state$place : placement;\n  var arrowStyles = getArrowStyles({\n    placement: finalPlacement,\n    popperArrowStyles: popperJS.styles.arrow,\n    arrowSize\n  });\n  var getReferenceProps = React.useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(setReferenceNode, _ref)\n    });\n  }, []);\n  var getPopperProps = React.useCallback(function (props, _ref) {\n    var _popperJS$styles;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    return _extends({}, props, popperJS.attributes.popper, {\n      ref: mergeRefs(setPopperNode, _ref),\n      style: _extends({}, props.style, (_popperJS$styles = popperJS.styles) == null ? void 0 : _popperJS$styles.popper)\n    });\n  }, [popperJS.attributes, popperJS.styles]);\n  var getArrowWrapperProps = React.useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    return _extends({}, props, popperJS.attributes.arrow, {\n      ref: mergeRefs(setArrowNode, _ref),\n      style: _extends({}, props.style, arrowStyles)\n    });\n  }, [popperJS.attributes, arrowStyles]);\n  var getArrowProps = React.useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: _ref,\n      style: _extends({\n        boxShadow: getBoxShadow(finalPlacement, arrowShadowColor)\n      }, props.style, {\n        position: \"absolute\",\n        zIndex: -1,\n        width: \"100%\",\n        height: \"100%\",\n        transform: \"rotate(45deg)\"\n      })\n    });\n  }, [finalPlacement, arrowShadowColor]);\n  return {\n    transformOrigin: toTransformOrigin(finalPlacement),\n    getReferenceProps,\n    getPopperProps,\n    getArrowWrapperProps,\n    getArrowProps,\n    state: popperJS.state,\n    forceUpdate: popperJS.forceUpdate,\n    update: popperJS.update,\n    placement: finalPlacement\n  };\n}","map":{"version":3,"sources":["../../src/use-popper.ts"],"names":["usePopper","props","placement","preventOverflow","fixed","flip","arrowSize","gutter","arrowPadding","offset","modifiers","React","offsetProp","customModifiers","name","options","phase","enabled","element","padding","requires","fn","state","effect","reference","arrow","popperJS","useBasePopper","strategy","finalPlacement","arrowStyles","getArrowStyles","popperArrowStyles","getReferenceProps","_ref","ref","mergeRefs","getPopperProps","style","getArrowWrapperProps","getArrowProps","boxShadow","getBoxShadow","position","zIndex","width","height","transform","transformOrigin","toTransformOrigin","forceUpdate","update"],"mappings":"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","sourcesContent":["import { mergeRefs, PropGetter } from \"@chakra-ui/utils\"\nimport { Modifier, Placement } from \"@popperjs/core\"\nimport * as React from \"react\"\nimport { getArrowStyles, getBoxShadow, toTransformOrigin } from \"./popper.utils\"\nimport { usePopper as useBasePopper } from \"./react-popper\"\n\nexport type { Placement }\n\nexport interface UsePopperProps {\n  gutter?: number\n  placement?: Placement\n  offset?: [number, number]\n  preventOverflow?: boolean\n  fixed?: boolean\n  flip?: boolean\n  arrowSize?: number\n  arrowShadowColor?: string\n  /**\n   * The distance of the arrow to its next border (numeric)\n   * E.g. arrowPadding = borderRadius * 2\n   */\n  arrowPadding?: number\n  matchWidth?: boolean\n  modifiers?: Modifier<string, any>[]\n}\n\nexport function usePopper(props: UsePopperProps = {}) {\n  const {\n    placement = \"bottom\",\n    preventOverflow = true,\n    fixed = false,\n    flip = true,\n    arrowSize = 8,\n    arrowShadowColor,\n    gutter = 8,\n    arrowPadding = 4,\n    offset: offsetProp,\n    matchWidth,\n    modifiers = [],\n  } = props\n\n  const [\n    referenceNode,\n    setReferenceNode,\n  ] = React.useState<HTMLButtonElement | null>(null)\n  const [popperNode, setPopperNode] = React.useState<HTMLDivElement | null>(\n    null,\n  )\n  const [arrowNode, setArrowNode] = React.useState<HTMLDivElement | null>(null)\n  const offset = offsetProp ?? [0, gutter]\n\n  /**\n   * recommended via popper docs\n   * @see https://popper.js.org/react-popper/v2/faq/#why-i-get-render-loop-whenever-i-put-a-function-inside-the-popper-configuration\n   */\n  type Modifiers = Partial<Modifier<any, unknown>>[]\n  const customModifiers = React.useMemo<Modifiers>(\n    () => [\n      // @see https://popper.js.org/docs/v2/modifiers/offset/\n      {\n        name: \"offset\",\n        options: {\n          offset: offset ?? [0, gutter],\n        },\n        phase: \"main\",\n      },\n      // @see https://popper.js.org/docs/v2/modifiers/prevent-overflow/\n      {\n        name: \"preventOverflow\",\n        enabled: !!preventOverflow,\n        phase: \"main\",\n      },\n      // @see https://popper.js.org/docs/v2/modifiers/arrow/\n      {\n        name: \"arrow\",\n        enabled: !!arrowNode,\n        options: { element: arrowNode, padding: arrowPadding },\n        phase: \"main\",\n      },\n      // @see https://popper.js.org/docs/v2/modifiers/flip/\n      {\n        name: \"flip\",\n        enabled: flip,\n        options: {\n          padding: 8,\n        },\n        phase: \"main\",\n      },\n      {\n        name: \"matchWidth\",\n        enabled: !!matchWidth,\n        phase: \"beforeWrite\",\n        requires: [\"computeStyles\"],\n        fn: ({ state }) => {\n          state.styles.popper.width = `${state.rects.reference.width}px`\n        },\n        effect: ({ state }) => () => {\n          const reference = state.elements.reference as HTMLElement\n          state.elements.popper.style.width = `${reference.offsetWidth}px`\n        },\n      },\n      {\n        name: \"applyArrowHide\",\n        enabled: true,\n        phase: \"write\",\n        fn({ state }) {\n          const { arrow } = state.elements\n          if (arrow) {\n            if (state.modifiersData.arrow?.centerOffset !== 0) {\n              arrow.setAttribute(\"data-hide\", \"\")\n            } else {\n              arrow.removeAttribute(\"data-hide\")\n            }\n          }\n        },\n      },\n    ],\n    [\n      arrowNode,\n      arrowPadding,\n      flip,\n      preventOverflow,\n      offset,\n      gutter,\n      matchWidth,\n    ],\n  )\n\n  const popperJS = useBasePopper(referenceNode as any, popperNode as any, {\n    placement,\n    strategy: fixed ? \"fixed\" : \"absolute\",\n    modifiers: customModifiers.concat(modifiers),\n  })\n\n  /**\n   * Ensure the popper will be correctly positioned with an extra update\n   */\n  React.useEffect(() => {\n    popperJS.forceUpdate?.()\n  })\n\n  const finalPlacement = popperJS.state?.placement ?? placement\n\n  const arrowStyles = getArrowStyles({\n    placement: finalPlacement,\n    popperArrowStyles: popperJS.styles.arrow,\n    arrowSize,\n  })\n\n  const getReferenceProps: PropGetter = React.useCallback(\n    (props = {}, _ref = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(setReferenceNode, _ref),\n      }\n    },\n    [],\n  )\n\n  const getPopperProps: PropGetter = React.useCallback(\n    (props = {}, _ref = null) => {\n      return {\n        ...props,\n        ...popperJS.attributes.popper,\n        ref: mergeRefs(setPopperNode, _ref),\n        style: { ...props.style, ...popperJS.styles?.popper },\n      }\n    },\n    [popperJS.attributes, popperJS.styles],\n  )\n\n  const getArrowWrapperProps: PropGetter = React.useCallback(\n    (props = {}, _ref = null) => {\n      return {\n        ...props,\n        ...popperJS.attributes.arrow,\n        ref: mergeRefs(setArrowNode, _ref),\n        style: { ...props.style, ...arrowStyles },\n      }\n    },\n    [popperJS.attributes, arrowStyles],\n  )\n\n  const getArrowProps: PropGetter = React.useCallback(\n    (props = {}, _ref = null) => {\n      return {\n        ...props,\n        ref: _ref,\n        style: {\n          boxShadow: getBoxShadow(finalPlacement, arrowShadowColor),\n          ...props.style,\n          position: \"absolute\",\n          zIndex: -1,\n          width: \"100%\",\n          height: \"100%\",\n          transform: \"rotate(45deg)\",\n        },\n      }\n    },\n    [finalPlacement, arrowShadowColor],\n  )\n\n  return {\n    transformOrigin: toTransformOrigin(finalPlacement),\n    getReferenceProps,\n    getPopperProps,\n    getArrowWrapperProps,\n    getArrowProps,\n    state: popperJS.state,\n    forceUpdate: popperJS.forceUpdate,\n    update: popperJS.update,\n    placement: finalPlacement,\n  }\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n"]},"metadata":{},"sourceType":"module"}