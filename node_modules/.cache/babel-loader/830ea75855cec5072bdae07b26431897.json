{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport NavItem from './NavItem';\nimport NavLink from './NavLink';\nvar propTypes = {\n  /**\r\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\r\n   * @type {string|number}\r\n   * @required\r\n   */\n  id: PropTypes.any,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables the toggle NavLink  */\n  disabled: PropTypes.bool,\n\n  /** Style the toggle NavLink as active  */\n  active: PropTypes.bool,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /**\r\n   *  Which event when fired outside the component will cause it to be closed.\r\n   *\r\n   * _see [DropdownMenu](#menu-props) for more details_\r\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string\n};\nvar NavDropdown = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      title = _ref.title,\n      children = _ref.children,\n      bsPrefix = _ref.bsPrefix,\n      rootCloseEvent = _ref.rootCloseEvent,\n      menuRole = _ref.menuRole,\n      disabled = _ref.disabled,\n      active = _ref.active,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"menuRole\", \"disabled\", \"active\"]);\n\n  return React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props, {\n    as: NavItem\n  }), React.createElement(Dropdown.Toggle, {\n    id: id,\n    eventKey: null,\n    active: active,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    as: NavLink\n  }, title), React.createElement(Dropdown.Menu, {\n    role: menuRole,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nNavDropdown.displayName = 'NavDropdown';\nNavDropdown.propTypes = propTypes;\nNavDropdown.Item = Dropdown.Item;\nNavDropdown.Divider = Dropdown.Divider;\nNavDropdown.Header = Dropdown.Header;\nexport default NavDropdown;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","Dropdown","NavItem","NavLink","propTypes","id","any","onClick","func","title","node","isRequired","disabled","bool","active","menuRole","string","rootCloseEvent","bsPrefix","NavDropdown","forwardRef","_ref","ref","children","props","createElement","as","Toggle","eventKey","childBsPrefix","Menu","role","displayName","Item","Divider","Header"],"sources":["/Users/erakastrati/Desktop/HMS-frontend/node_modules/react-bootstrap/esm/NavDropdown.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dropdown from './Dropdown';\r\nimport NavItem from './NavItem';\r\nimport NavLink from './NavLink';\r\nvar propTypes = {\r\n  /**\r\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\r\n   * @type {string|number}\r\n   * @required\r\n   */\r\n  id: PropTypes.any,\r\n\r\n  /** An `onClick` handler passed to the Toggle component */\r\n  onClick: PropTypes.func,\r\n\r\n  /** The content of the non-toggle Button.  */\r\n  title: PropTypes.node.isRequired,\r\n\r\n  /** Disables the toggle NavLink  */\r\n  disabled: PropTypes.bool,\r\n\r\n  /** Style the toggle NavLink as active  */\r\n  active: PropTypes.bool,\r\n\r\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\r\n  menuRole: PropTypes.string,\r\n\r\n  /**\r\n   *  Which event when fired outside the component will cause it to be closed.\r\n   *\r\n   * _see [DropdownMenu](#menu-props) for more details_\r\n   */\r\n  rootCloseEvent: PropTypes.string,\r\n\r\n  /** @ignore */\r\n  bsPrefix: PropTypes.string\r\n};\r\nvar NavDropdown = React.forwardRef(function (_ref, ref) {\r\n  var id = _ref.id,\r\n      title = _ref.title,\r\n      children = _ref.children,\r\n      bsPrefix = _ref.bsPrefix,\r\n      rootCloseEvent = _ref.rootCloseEvent,\r\n      menuRole = _ref.menuRole,\r\n      disabled = _ref.disabled,\r\n      active = _ref.active,\r\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"title\", \"children\", \"bsPrefix\", \"rootCloseEvent\", \"menuRole\", \"disabled\", \"active\"]);\r\n\r\n  return React.createElement(Dropdown, _extends({\r\n    ref: ref\r\n  }, props, {\r\n    as: NavItem\r\n  }), React.createElement(Dropdown.Toggle, {\r\n    id: id,\r\n    eventKey: null,\r\n    active: active,\r\n    disabled: disabled,\r\n    childBsPrefix: bsPrefix,\r\n    as: NavLink\r\n  }, title), React.createElement(Dropdown.Menu, {\r\n    role: menuRole,\r\n    rootCloseEvent: rootCloseEvent\r\n  }, children));\r\n});\r\nNavDropdown.displayName = 'NavDropdown';\r\nNavDropdown.propTypes = propTypes;\r\nNavDropdown.Item = Dropdown.Item;\r\nNavDropdown.Divider = Dropdown.Divider;\r\nNavDropdown.Header = Dropdown.Header;\r\nexport default NavDropdown;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,IAAIC,SAAS,GAAG;EACd;AACF;AACA;AACA;AACA;EACEC,EAAE,EAAEL,SAAS,CAACM,GANA;;EAQd;EACAC,OAAO,EAAEP,SAAS,CAACQ,IATL;;EAWd;EACAC,KAAK,EAAET,SAAS,CAACU,IAAV,CAAeC,UAZR;;EAcd;EACAC,QAAQ,EAAEZ,SAAS,CAACa,IAfN;;EAiBd;EACAC,MAAM,EAAEd,SAAS,CAACa,IAlBJ;;EAoBd;EACAE,QAAQ,EAAEf,SAAS,CAACgB,MArBN;;EAuBd;AACF;AACA;AACA;AACA;EACEC,cAAc,EAAEjB,SAAS,CAACgB,MA5BZ;;EA8Bd;EACAE,QAAQ,EAAElB,SAAS,CAACgB;AA/BN,CAAhB;AAiCA,IAAIG,WAAW,GAAGpB,KAAK,CAACqB,UAAN,CAAiB,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;EACtD,IAAIjB,EAAE,GAAGgB,IAAI,CAAChB,EAAd;EAAA,IACII,KAAK,GAAGY,IAAI,CAACZ,KADjB;EAAA,IAEIc,QAAQ,GAAGF,IAAI,CAACE,QAFpB;EAAA,IAGIL,QAAQ,GAAGG,IAAI,CAACH,QAHpB;EAAA,IAIID,cAAc,GAAGI,IAAI,CAACJ,cAJ1B;EAAA,IAKIF,QAAQ,GAAGM,IAAI,CAACN,QALpB;EAAA,IAMIH,QAAQ,GAAGS,IAAI,CAACT,QANpB;EAAA,IAOIE,MAAM,GAAGO,IAAI,CAACP,MAPlB;EAAA,IAQIU,KAAK,GAAG1B,6BAA6B,CAACuB,IAAD,EAAO,CAAC,IAAD,EAAO,OAAP,EAAgB,UAAhB,EAA4B,UAA5B,EAAwC,gBAAxC,EAA0D,UAA1D,EAAsE,UAAtE,EAAkF,QAAlF,CAAP,CARzC;;EAUA,OAAOtB,KAAK,CAAC0B,aAAN,CAAoBxB,QAApB,EAA8BJ,QAAQ,CAAC;IAC5CyB,GAAG,EAAEA;EADuC,CAAD,EAE1CE,KAF0C,EAEnC;IACRE,EAAE,EAAExB;EADI,CAFmC,CAAtC,EAIHH,KAAK,CAAC0B,aAAN,CAAoBxB,QAAQ,CAAC0B,MAA7B,EAAqC;IACvCtB,EAAE,EAAEA,EADmC;IAEvCuB,QAAQ,EAAE,IAF6B;IAGvCd,MAAM,EAAEA,MAH+B;IAIvCF,QAAQ,EAAEA,QAJ6B;IAKvCiB,aAAa,EAAEX,QALwB;IAMvCQ,EAAE,EAAEvB;EANmC,CAArC,EAODM,KAPC,CAJG,EAWIV,KAAK,CAAC0B,aAAN,CAAoBxB,QAAQ,CAAC6B,IAA7B,EAAmC;IAC5CC,IAAI,EAAEhB,QADsC;IAE5CE,cAAc,EAAEA;EAF4B,CAAnC,EAGRM,QAHQ,CAXJ,CAAP;AAeD,CA1BiB,CAAlB;AA2BAJ,WAAW,CAACa,WAAZ,GAA0B,aAA1B;AACAb,WAAW,CAACf,SAAZ,GAAwBA,SAAxB;AACAe,WAAW,CAACc,IAAZ,GAAmBhC,QAAQ,CAACgC,IAA5B;AACAd,WAAW,CAACe,OAAZ,GAAsBjC,QAAQ,CAACiC,OAA/B;AACAf,WAAW,CAACgB,MAAZ,GAAqBlC,QAAQ,CAACkC,MAA9B;AACA,eAAehB,WAAf"},"metadata":{},"sourceType":"module"}